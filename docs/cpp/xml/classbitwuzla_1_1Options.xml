<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classbitwuzla_1_1Options" kind="class" language="C++" prot="public">
    <compoundname>bitwuzla::Options</compoundname>
    <includes refid="bitwuzla_8h" local="no">bitwuzla.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbitwuzla_1_1Options_1a3bec658c308fb6155676ca7913f97080" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend bitwuzla::Options::Bitwuzla</definition>
        <argsstring></argsstring>
        <name>Bitwuzla</name>
        <qualifiedname>bitwuzla::Options::Bitwuzla</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="145" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbitwuzla_1_1Options_1a70d133142a9f73d99827647af56b0395" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend bitwuzla::Options::OptionInfo</definition>
        <argsstring></argsstring>
        <name>OptionInfo</name>
        <qualifiedname>bitwuzla::Options::OptionInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="146" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbitwuzla_1_1Options_1a1bce045ab1fea64c010c4f3483527e4f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; bzla::option::Options &gt;</type>
        <definition>std::unique_ptr&lt;bzla::option::Options&gt; bitwuzla::Options::d_options</definition>
        <argsstring></argsstring>
        <name>d_options</name>
        <qualifiedname>bitwuzla::Options::d_options</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The wrapped internal options. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="253" column="19" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbitwuzla_1_1Options_1aa5615ee76e46b88d71f27574448b2728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bitwuzla::Options::Options</definition>
        <argsstring>()</argsstring>
        <name>Options</name>
        <qualifiedname>bitwuzla::Options::Options</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="150" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a95b35c2b48384c310819f30816cd3a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bitwuzla::Options::~Options</definition>
        <argsstring>()</argsstring>
        <name>~Options</name>
        <qualifiedname>bitwuzla::Options::~Options</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="152" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a60b3b4afe635d1e3371b84eb9a8cdc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bitwuzla::Options::Options</definition>
        <argsstring>(const Options &amp;options)</argsstring>
        <name>Options</name>
        <qualifiedname>bitwuzla::Options::Options</qualifiedname>
        <param>
          <type>const <ref refid="classbitwuzla_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="154" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a2a37ec984ea0d700986f211d41410a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbitwuzla_1_1Options" kindref="compound">Options</ref> &amp;</type>
        <definition>Options &amp; bitwuzla::Options::operator=</definition>
        <argsstring>(const Options &amp;options)</argsstring>
        <name>operator=</name>
        <qualifiedname>bitwuzla::Options::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classbitwuzla_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="156" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a19a5bc2d35ae566e88861ec8262b21b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla::Options::is_bool</definition>
        <argsstring>(Option option) const</argsstring>
        <name>is_bool</name>
        <qualifiedname>bitwuzla::Options::is_bool</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if given option is a Boolean option. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>option</computeroutput> is a Boolean option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="162" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a166ac149cded44fe338578930c0c9aac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla::Options::is_numeric</definition>
        <argsstring>(Option option) const</argsstring>
        <name>is_numeric</name>
        <qualifiedname>bitwuzla::Options::is_numeric</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if given option is a numeric option. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>option</computeroutput> is a numeric option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="168" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a6c0e8a2ee61e5d9e9bd29846762a64c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla::Options::is_mode</definition>
        <argsstring>(Option option) const</argsstring>
        <name>is_mode</name>
        <qualifiedname>bitwuzla::Options::is_mode</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if given option is an option with a mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>option</computeroutput> is an option with a mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="174" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1ac274a77add7656e79d8e429aa6bd6769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla::Options::shrt</definition>
        <argsstring>(Option option) const</argsstring>
        <name>shrt</name>
        <qualifiedname>bitwuzla::Options::shrt</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The short name of this option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="177" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1ac21eb7d5d1d6cf53ead769004fcbdbc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla::Options::lng</definition>
        <argsstring>(Option option) const</argsstring>
        <name>lng</name>
        <qualifiedname>bitwuzla::Options::lng</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The long name of this option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="179" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a586bf2a05e6302b348c0ebae1b25c448" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla::Options::description</definition>
        <argsstring>(Option option) const</argsstring>
        <name>description</name>
        <qualifiedname>bitwuzla::Options::description</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The description of this option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="181" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a5b531809faf378c57185246e2d357053" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; bitwuzla::Options::modes</definition>
        <argsstring>(Option option) const</argsstring>
        <name>modes</name>
        <qualifiedname>bitwuzla::Options::modes</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The modes of this option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="184" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1af996881eeb499cc7ac43a003ade6d267" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
        <definition>Option bitwuzla::Options::option</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>option</name>
        <qualifiedname>bitwuzla::Options::option</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The option associated to the given short or long option name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="187" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a9c084d7bb12c1b94a07abb0a3a2e2a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla::Options::set</definition>
        <argsstring>(Option option, uint64_t value)</argsstring>
        <name>set</name>
        <qualifiedname>bitwuzla::Options::set</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set Boolean or numeric option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The option value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="195" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a56170251d39d930d7d08e744cd08b2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla::Options::set</definition>
        <argsstring>(Option option, const std::string &amp;mode)</argsstring>
        <name>set</name>
        <qualifiedname>bitwuzla::Options::set</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set option value for options with different modes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The option mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="202" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1afacc58fad8f7db059ef51e5baf958c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla::Options::set</definition>
        <argsstring>(Option option, const char *mode)</argsstring>
        <name>set</name>
        <qualifiedname>bitwuzla::Options::set</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set option value for options with different modes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The option mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="209" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1ae6e655ee8f5ed015ffeedc390a011b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla::Options::set</definition>
        <argsstring>(const std::string &amp;lng, const std::string &amp;value)</argsstring>
        <name>set</name>
        <qualifiedname>bitwuzla::Options::set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>lng</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set current value of option, configured via the long option name and its value in string representation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lng</parametername>
</parameternamelist>
<parameterdescription>
<para>The long name of the option to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string representation of the value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="216" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a2e329072edd196df44c838a5a4781a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla::Options::set</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;args)</argsstring>
        <name>set</name>
        <qualifiedname>bitwuzla::Options::set</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set options via command line arguments.</para>
<para>Supports the following command line option format: Short option names: -short ... {&quot;-short&quot;} -short=val ... {&quot;-short=val&quot;} -short val ... {&quot;-short&quot;, &quot;val&quot;}</para>
<para>Long option names: <ndash/>long ... {&quot;--long&quot;} <ndash/>long=val ... {&quot;--long=val&quot;} <ndash/>long val ... {&quot;--long&quot;, &quot;val&quot;}</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>List of command line options. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="234" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a618f9119a0b1a140f650d2aa3b54ab22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla::Options::get</definition>
        <argsstring>(Option option) const</argsstring>
        <name>get</name>
        <qualifiedname>bitwuzla::Options::get</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current value of a Boolean or numeric option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="242" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classbitwuzla_1_1Options_1a1f07e0ec2b8bcfcbf9c7f0e073b284bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; bitwuzla::Options::get_mode</definition>
        <argsstring>(Option option) const</argsstring>
        <name>get_mode</name>
        <qualifiedname>bitwuzla::Options::get_mode</qualifiedname>
        <param>
          <type><ref refid="namespacebitwuzla_1a886dae78d57a9d8eca547b783873186c" kindref="member">Option</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current value of an option with modes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="249" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" line="143" column="1" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/cpp/bitwuzla.h" bodystart="144" bodyend="254"/>
    <listofallmembers>
      <member refid="classbitwuzla_1_1Options_1a3bec658c308fb6155676ca7913f97080" prot="private" virt="non-virtual"><scope>bitwuzla::Options</scope><name>Bitwuzla</name></member>
      <member refid="classbitwuzla_1_1Options_1a1bce045ab1fea64c010c4f3483527e4f" prot="private" virt="non-virtual"><scope>bitwuzla::Options</scope><name>d_options</name></member>
      <member refid="classbitwuzla_1_1Options_1a586bf2a05e6302b348c0ebae1b25c448" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>description</name></member>
      <member refid="classbitwuzla_1_1Options_1a618f9119a0b1a140f650d2aa3b54ab22" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>get</name></member>
      <member refid="classbitwuzla_1_1Options_1a1f07e0ec2b8bcfcbf9c7f0e073b284bd" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>get_mode</name></member>
      <member refid="classbitwuzla_1_1Options_1a19a5bc2d35ae566e88861ec8262b21b5" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>is_bool</name></member>
      <member refid="classbitwuzla_1_1Options_1a6c0e8a2ee61e5d9e9bd29846762a64c4" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>is_mode</name></member>
      <member refid="classbitwuzla_1_1Options_1a166ac149cded44fe338578930c0c9aac" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>is_numeric</name></member>
      <member refid="classbitwuzla_1_1Options_1ac21eb7d5d1d6cf53ead769004fcbdbc7" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>lng</name></member>
      <member refid="classbitwuzla_1_1Options_1a5b531809faf378c57185246e2d357053" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>modes</name></member>
      <member refid="classbitwuzla_1_1Options_1a2a37ec984ea0d700986f211d41410a32" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>operator=</name></member>
      <member refid="classbitwuzla_1_1Options_1af996881eeb499cc7ac43a003ade6d267" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>option</name></member>
      <member refid="classbitwuzla_1_1Options_1a70d133142a9f73d99827647af56b0395" prot="private" virt="non-virtual"><scope>bitwuzla::Options</scope><name>OptionInfo</name></member>
      <member refid="classbitwuzla_1_1Options_1aa5615ee76e46b88d71f27574448b2728" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>Options</name></member>
      <member refid="classbitwuzla_1_1Options_1a60b3b4afe635d1e3371b84eb9a8cdc25" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>Options</name></member>
      <member refid="classbitwuzla_1_1Options_1a9c084d7bb12c1b94a07abb0a3a2e2a79" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>set</name></member>
      <member refid="classbitwuzla_1_1Options_1a56170251d39d930d7d08e744cd08b2a4" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>set</name></member>
      <member refid="classbitwuzla_1_1Options_1afacc58fad8f7db059ef51e5baf958c35" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>set</name></member>
      <member refid="classbitwuzla_1_1Options_1ae6e655ee8f5ed015ffeedc390a011b93" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>set</name></member>
      <member refid="classbitwuzla_1_1Options_1a2e329072edd196df44c838a5a4781a34" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>set</name></member>
      <member refid="classbitwuzla_1_1Options_1ac274a77add7656e79d8e429aa6bd6769" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>shrt</name></member>
      <member refid="classbitwuzla_1_1Options_1a95b35c2b48384c310819f30816cd3a9d" prot="public" virt="non-virtual"><scope>bitwuzla::Options</scope><name>~Options</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
