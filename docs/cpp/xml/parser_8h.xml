<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="parser_8h" kind="file" language="C++">
    <compoundname>parser.h</compoundname>
    <includes refid="bitwuzla_8h" local="no">bitwuzla/cpp/bitwuzla.h</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="2">
        <label>bitwuzla/cpp/bitwuzla.h</label>
        <link refid="bitwuzla_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/cpp/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bitwuzla/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="4">
        <label>bitwuzla/option.h</label>
        <link refid="option_8h"/>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="9">
        <label>optional</label>
      </node>
      <node id="10">
        <label>unordered_map</label>
      </node>
      <node id="11">
        <label>unordered_set</label>
      </node>
      <node id="12">
        <label>variant</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classbitwuzla_1_1parser_1_1Parser" prot="public">bitwuzla::parser::Parser</innerclass>
    <innernamespace refid="namespacebzla">bzla</innernamespace>
    <innernamespace refid="namespacebzla_1_1parser">bzla::parser</innernamespace>
    <innernamespace refid="namespacebitwuzla">bitwuzla</innernamespace>
    <innernamespace refid="namespacebitwuzla_1_1parser">bitwuzla::parser</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Bitwuzla:<sp/>Satisfiability<sp/>Modulo<sp/>Theories<sp/>(SMT)<sp/>solver.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2023<sp/>by<sp/>the<sp/>authors<sp/>listed<sp/>in<sp/>the<sp/>AUTHORS<sp/>file<sp/>at</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/AUTHORS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Bitwuzla<sp/>under<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>COPYING<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>information<sp/>at<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/COPYING</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_CPP_PARSER_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITWUZLA_API_CPP_PARSER_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bitwuzla_8h" kindref="compound">bitwuzla/cpp/bitwuzla.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacebzla_1_1parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebzla_1_1parser" kindref="compound">bzla::parser</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Parser;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacebitwuzla_1_1parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebitwuzla_1_1parser" kindref="compound">bitwuzla::parser</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classbitwuzla_1_1parser_1_1Parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbitwuzla_1_1parser_1_1Parser" kindref="compound">Parser</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classbitwuzla_1_1parser_1_1Parser_1a9bf75506cbbcfb7e1496efff63a3198d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbitwuzla_1_1parser_1_1Parser_1a9bf75506cbbcfb7e1496efff63a3198d" kindref="member">Parser</ref>(<ref refid="classbitwuzla_1_1Options" kindref="compound">Options</ref><sp/>&amp;options,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;infile_name,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;language<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;smt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50" refid="classbitwuzla_1_1parser_1_1Parser_1a913c0b88162aac4eceb96ab626abd169" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbitwuzla_1_1parser_1_1Parser_1a913c0b88162aac4eceb96ab626abd169" kindref="member">Parser</ref>(<ref refid="classbitwuzla_1_1Options" kindref="compound">Options</ref><sp/>&amp;options,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;infile_name,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*infile,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;language<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;smt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55" refid="classbitwuzla_1_1parser_1_1Parser_1a5c520cd245c68a2895ddf6d5929dddfa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbitwuzla_1_1parser_1_1Parser_1a5c520cd245c68a2895ddf6d5929dddfa" kindref="member">~Parser</ref>();</highlight></codeline>
<codeline lineno="61" refid="classbitwuzla_1_1parser_1_1Parser_1a73dbf07bc34ce7afd451df9046046bdc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classbitwuzla_1_1parser_1_1Parser_1a73dbf07bc34ce7afd451df9046046bdc" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parse_only<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classbitwuzla_1_1parser_1_1Parser_1aa8f25de18f6b308c160f9d587d9f5da1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbitwuzla_1_1Bitwuzla" kindref="compound">bitwuzla::Bitwuzla</ref><sp/>*<ref refid="classbitwuzla_1_1parser_1_1Parser_1aa8f25de18f6b308c160f9d587d9f5da1" kindref="member">bitwuzla</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;bzla::parser::Parser&gt;<sp/>d_parser;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bitwuzla::parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ma/git/bitwuzla/include/bitwuzla/cpp/parser.h"/>
  </compounddef>
</doxygen>
