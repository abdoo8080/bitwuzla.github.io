<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="bitwuzla_8h" kind="file" language="C++">
    <compoundname>bitwuzla.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="enums_8h" local="no">bitwuzla/enums.h</includes>
    <includes refid="option_8h" local="no">bitwuzla/option.h</includes>
    <includedby refid="parser_8h" local="no">/home/ma/git/bitwuzla/include/bitwuzla/c/parser.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h</label>
        <link refid="bitwuzla_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bitwuzla/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="6">
        <label>bitwuzla/option.h</label>
        <link refid="option_8h"/>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h</label>
        <link refid="bitwuzla_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/c/parser.h</label>
        <link refid="parser_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structBitwuzlaOptionInfo" prot="public">BitwuzlaOptionInfo</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitwuzla_8h_1a66d8049b17c3c2e1418955ed7e53800f" prot="public" static="no">
        <name>BITWUZLA_API_USE_C_ENUMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="24" column="9" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" prot="public" static="no">
        <type>struct <ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref></type>
        <definition>typedef struct BitwuzlaOptions BitwuzlaOptions</definition>
        <argsstring></argsstring>
        <name>BitwuzlaOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Bitwuzla configuration options. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="115" column="30" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t BitwuzlaSort</definition>
        <argsstring></argsstring>
        <name>BitwuzlaSort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A Bitwuzla sort. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="279" column="18" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t BitwuzlaTerm</definition>
        <argsstring></argsstring>
        <name>BitwuzlaTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A Bitwuzla term. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="488" column="18" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" prot="public" static="no">
        <type>struct <ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref></type>
        <definition>typedef struct Bitwuzla Bitwuzla</definition>
        <argsstring></argsstring>
        <name>Bitwuzla</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Bitwuzla solver. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1027" column="23" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" bodystart="1027" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__c__libinfo_1gaa116a8360528b0ff56d1d36879a8dce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_copyright</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_copyright</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get copyright information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="40" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="40" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__libinfo_1ga5efe0be5bf40e0e2ec53c3fb7739eeef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_version</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get version information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="45" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="45" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__libinfo_1ga7d88fb761fd5f64f9c14806666eec3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_git_id</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_git_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get git information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="50" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="50" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1gaf208fc6d0fe345818d9338dba99f9e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
        <definition>BitwuzlaOptions * bitwuzla_options_new</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_options_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new BitwuzlaOptions instance.</para>
<para>The returned instance must be deleted via <computeroutput><ref refid="group__c__bitwuzlaoptions_1ga91f0479c3a525e2deabbc0dea5a6f954" kindref="member">bitwuzla_options_delete()</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>A pointer to the created BitwuzlaOptions instance.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga91f0479c3a525e2deabbc0dea5a6f954" kindref="member">bitwuzla_options_delete</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="131" column="17" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="131" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1ga91f0479c3a525e2deabbc0dea5a6f954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_options_delete</definition>
        <argsstring>(BitwuzlaOptions *options)</argsstring>
        <name>bitwuzla_options_delete</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a BitwuzlaOptions instance.</para>
<para>The given instance must have been created via <computeroutput><ref refid="group__c__bitwuzlaoptions_1gaf208fc6d0fe345818d9338dba99f9e7f" kindref="member">bitwuzla_options_new()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The BitwuzlaOptions instance to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1gaf208fc6d0fe345818d9338dba99f9e7f" kindref="member">bitwuzla_options_new</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="143" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1ga41012ed3772f0b013182107452556e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_option_is_numeric</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option)</argsstring>
        <name>bitwuzla_option_is_numeric</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a given option is a numeric (or Boolean) option. <simplesect kind="return"><para>True if the given option is a numeric or Boolean option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="149" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1gafbc68bda6a3c852ea886cc1cef1deb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_option_is_mode</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option)</argsstring>
        <name>bitwuzla_option_is_mode</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a given option is an option with a mode <simplesect kind="return"><para>True if the given option is an option with a mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="155" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_option</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option, uint64_t val)</argsstring>
        <name>bitwuzla_set_option</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla options instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The option value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga37742ef375def28c195c79249142216d" kindref="member">bitwuzla_get_option</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="168" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1gaff7ff22db2d7d6fa22ba35914e0b7119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_option_mode</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option, const char *val)</argsstring>
        <name>bitwuzla_set_option_mode</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set option mode for options with modes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla options instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The option string value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga4dcd195b9e78bd190b5e96ff3cb0d7f5" kindref="member">bitwuzla_get_option_mode</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="183" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1ga37742ef375def28c195c79249142216d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_get_option</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option)</argsstring>
        <name>bitwuzla_get_option</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current value of an option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla options instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="198" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="198" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1ga4dcd195b9e78bd190b5e96ff3cb0d7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_get_option_mode</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option)</argsstring>
        <name>bitwuzla_get_option_mode</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current mode of an option as a string if option has modes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla options instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1gaff7ff22db2d7d6fa22ba35914e0b7119" kindref="member">bitwuzla_set_option_mode</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="212" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="212" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaoptions_1gaa46bec92f4a81ea8a7d94f7ccd205b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_get_option_info</definition>
        <argsstring>(BitwuzlaOptions *options, BitwuzlaOption option, BitwuzlaOptionInfo *info)</argsstring>
        <name>bitwuzla_get_option_info</name>
        <param>
          <type><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the details of an option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla options instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>The option info to populate, will be valid until the next <computeroutput>bitwuzla_get_option_info</computeroutput> call.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="226" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="226" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bitwuzla_8h_1a68fc48d91cbcea858e83b1b7fc18837c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_result_to_string</definition>
        <argsstring>(BitwuzlaResult result)</argsstring>
        <name>bitwuzla_result_to_string</name>
        <param>
          <type><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the string representation of a result. <simplesect kind="return"><para>A string representation of the given result. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_result_to_string</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="244" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="244" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="bitwuzla_8h_1ad175d1c194384f7c99e9154b6683ce44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_rm_to_string</definition>
        <argsstring>(BitwuzlaRoundingMode rm)</argsstring>
        <name>bitwuzla_rm_to_string</name>
        <param>
          <type><ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the string representation of a rounding mode. <simplesect kind="return"><para>A string representation of the rounding mode. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_rm_to_string</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="258" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="258" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="bitwuzla_8h_1a6380e4fe0d9d9633aa10c835effcb937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_kind_to_string</definition>
        <argsstring>(BitwuzlaKind kind)</argsstring>
        <name>bitwuzla_kind_to_string</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the string representation of a term kind. <simplesect kind="return"><para>A string representation of the given term kind. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_kind_to_string</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="272" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="272" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga112749aa79f46e46e690bcceee03ad4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t bitwuzla_sort_hash</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_hash</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the hash value for a sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash value of the sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="292" column="8" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="292" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga72f79b3c0df6adf66106b61fe8b7f175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_sort_bv_get_size</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_bv_get_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a bit-vector sort.</para>
<para>Requires that given sort is a bit-vector sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size of the bit-vector sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="303" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="303" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gaf70dd1197655ee8300524ce23ffd6647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_sort_fp_get_exp_size</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_fp_get_exp_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the exponent size of a floating-point sort.</para>
<para>Requires that given sort is a floating-point sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The exponent size of the floating-point sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="314" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="314" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga2dd5e721758bce9191d8ad1bba9d0895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_sort_fp_get_sig_size</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_fp_get_sig_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the significand size of a floating-point sort.</para>
<para>Requires that given sort is a floating-point sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The significand size of the floating-point sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="325" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="325" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gace27780a390857382fe95dcf1883fcc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_sort_array_get_index</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_array_get_index</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index sort of an array sort.</para>
<para>Requires that given sort is an array sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index sort of the array sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="336" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="336" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga5260f3a3293ab59ecbba24500e9a484f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_sort_array_get_element</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_array_get_element</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the element sort of an array sort.</para>
<para>Requires that given sort is an array sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element sort of the array sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="347" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="347" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gad524c5ed6629d63dcb36cfa833993dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref> *</type>
        <definition>BitwuzlaSort * bitwuzla_sort_fun_get_domain_sorts</definition>
        <argsstring>(BitwuzlaSort sort, size_t *size)</argsstring>
        <name>bitwuzla_sort_fun_get_domain_sorts</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the domain sorts of a function sort.</para>
<para>The domain sorts are returned as an array of sorts of size <computeroutput>size</computeroutput>. Requires that given sort is a function sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the returned array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The domain sorts of the function sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="360" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="360" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gac293ff68f4f2109f45232a057b591685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_sort_fun_get_codomain</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_fun_get_codomain</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the codomain sort of a function sort.</para>
<para>Requires that given sort is a function sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The codomain sort of the function sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="372" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="372" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gacfb5896f5bcf57d84cd4e7f6673cb91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_sort_fun_get_arity</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_fun_get_arity</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the arity of a function sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of arguments of the function sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="381" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="381" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga1e6568c1b16b853fdde546cb1843251f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_sort_get_uninterpreted_symbol</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_get_uninterpreted_symbol</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the symbol of an uninterpreted sort. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The symbol; NULL if no symbol is defined. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_sort_uninterpreted_get_symbol</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="390" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="390" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga5f7dd39207213dd7cbbc56483cdc81ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_equal</definition>
        <argsstring>(BitwuzlaSort sort0, BitwuzlaSort sort1)</argsstring>
        <name>bitwuzla_sort_is_equal</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if two sorts are equal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first sort. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sort1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the given sorts are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="400" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="400" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga223021177f73fb498200dc54a73cd222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_array</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_array</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is an array sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is an array sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="409" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="409" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gaa45fcddbef9c1431fa65f5d4fbc09220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_bool</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_bool</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is a Boolean sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a Boolean sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="418" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="418" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga144ec29d4ab20bf57771fd8176d8a97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_bv</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_bv</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is a bit-vector sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a bit-vector sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="427" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="427" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gadf39de9ace9af52172ed29d7360fe498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_fp</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_fp</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is a floating-point sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a floating-point sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="436" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="436" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga28ee43c983d134b737d3020724e11778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_fun</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_fun</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is a function sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a function sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="445" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="445" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga2a3f0e4bc15dec1ce49319265130501b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_rm</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_rm</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is a Roundingmode sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a Roundingmode sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="454" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="454" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gaf57078a6b8847a862a43899b94b1a176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_sort_is_uninterpreted</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_is_uninterpreted</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a sort is an uninterpreted sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>sort</computeroutput> is a uninterpreted sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="463" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="463" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1gaf3f7383f2c912dec0eea99e08d1232ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_sort_to_string</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_sort_to_string</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the SMT-LIBV v2 string representation of a sort. <simplesect kind="return"><para>A string representation of the given sort. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_sort_to_string</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="471" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="471" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlasort_1ga73101e68c29aaedffa07c7ed7b8569be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_sort_print</definition>
        <argsstring>(BitwuzlaSort sort, FILE *file)</argsstring>
        <name>bitwuzla_sort_print</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print sort to given file in SMT-LIB v2 format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to print the sort to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="479" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="479" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gab61f1c9a4e2f27dec964c29dbcda6d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t bitwuzla_term_hash</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_hash</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the hash value for a term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash value of the term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="501" column="8" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="501" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga5bf4cc6b1847e96ea0296713083f1b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
        <definition>BitwuzlaKind bitwuzla_term_get_kind</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_get_kind</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the kind of a term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The kind of the given term.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="512" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="512" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga5975a209491cf1cc7eecb856447b1246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_term_get_children</definition>
        <argsstring>(BitwuzlaTerm term, size_t *size)</argsstring>
        <name>bitwuzla_term_get_children</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the child terms of a term.</para>
<para>Returns <computeroutput>NULL</computeroutput> if given term does not have children.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the number of children of <computeroutput>term</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The children of <computeroutput>term</computeroutput> as an array of terms. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="524" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="524" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gabc37593daef49722a67da682bc387a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t *</type>
        <definition>uint64_t * bitwuzla_term_get_indices</definition>
        <argsstring>(BitwuzlaTerm term, size_t *size)</argsstring>
        <name>bitwuzla_term_get_indices</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the indices of an indexed term.</para>
<para>Requires that given term is an indexed term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the number of indices of <computeroutput>term</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The indices of <computeroutput>term</computeroutput> as an array of indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="536" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="536" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga4833ef04df4355257a7295522f5905da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_indexed</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_indexed</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is an indexed term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is an indexed term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="545" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="545" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga78d7733d49ec4134be75e26704303275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_term_get_sort</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_get_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the sort of a term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sort of the term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="554" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="554" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaede3ec49cd0246cf82aba9d6f56cf1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_term_array_get_index_sort</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_array_get_index_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index sort of an array term.</para>
<para>Requires that given term is an array or an array store term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index sort of the array term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="565" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="565" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3b3d22be4845607e9fef67234bbe49b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_term_array_get_element_sort</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_array_get_element_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the element sort of an array term.</para>
<para>Requires that given term is an array or an array store term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element sort of the array term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="576" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="576" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3989a0aec5d263aa2850237932de03e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref> *</type>
        <definition>BitwuzlaSort * bitwuzla_term_fun_get_domain_sorts</definition>
        <argsstring>(BitwuzlaTerm term, size_t *size)</argsstring>
        <name>bitwuzla_term_fun_get_domain_sorts</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the domain sorts of a function term.</para>
<para>The domain sorts are returned as an array of sorts of size `size. Requires that given term is an uninterpreted function, a lambda term, an array store term, or an ite term over function terms.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the returned array. Optional, NULL is allowed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The domain sorts of the function term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="590" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="590" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga6e7d67964c94704bd225f011a70caf49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_term_fun_get_codomain_sort</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_fun_get_codomain_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the codomain sort of a function term.</para>
<para>Requires that given term is an uninterpreted function, a lambda term, an array store term, or an ite term over function terms.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The codomain sort of the function term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="603" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="603" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaca4f4cdbeb541b7383d05505869b8c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_term_bv_get_size</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_bv_get_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bit-width of a bit-vector term.</para>
<para>Requires that given term is a bit-vector term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bit-width of the bit-vector term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="614" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="614" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3433f784e5828c28de594c2eae2bfb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_term_fp_get_exp_size</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_fp_get_exp_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bit-width of the exponent of a floating-point term.</para>
<para>Requires that given term is a floating-point term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bit-width of the exponent of the floating-point term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="625" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="625" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gadb45c01bf4a9299f2423e1eaaadb0033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_term_fp_get_sig_size</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_fp_get_sig_size</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bit-width of the significand of a floating-point term.</para>
<para>Requires that given term is a floating-point term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bit-width of the significand of the floating-point term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="636" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="636" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga691c7593f89b78f0aff9a975d7605809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t bitwuzla_term_fun_get_arity</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_fun_get_arity</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the arity of a function term.</para>
<para>Requires that given term is a function term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The arity of the function term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="647" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="647" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gad4343e156e526e366a1c28c90c6f2270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_term_get_symbol</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_get_symbol</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the symbol of a term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The symbol of <computeroutput>term</computeroutput>. <computeroutput>NULL</computeroutput> if no symbol is defined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="656" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="656" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gacacafcb92b8d267c93691df53a036759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_equal_sort</definition>
        <argsstring>(BitwuzlaTerm term0, BitwuzlaTerm term1)</argsstring>
        <name>bitwuzla_term_is_equal_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if the sorts of two terms are equal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the sorts of <computeroutput>term0</computeroutput> and <computeroutput>term1</computeroutput> are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="666" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="666" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga9f1e378f65a01e952266fa3f4329edfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_array</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_array</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is an array term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is an array term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="675" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga340e84297905fea70861c42781cd5937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_const</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_const</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="684" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="684" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gacfbbebc377fc344eb21d06a2236c8575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fun</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fun</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="693" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="693" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga4ec5da3adbe1fb6b2141bbf45e2713b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_var</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_var</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a variable.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="702" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="702" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga939a56d13f0c03f10c27347a71b04842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_value</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="711" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="711" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga14de5f5c450cf229c031a55f71e697ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="720" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="720" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga4e18f841753e6dbcb362670eb9e42d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="729" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="729" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga88a7d6bf6ce86452dfac4d3c1608ceae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="738" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="738" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gab951c96cf7c8de78d290b9641a85fbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bool</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bool</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a Boolean term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a Boolean term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="747" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="747" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gab0a016bbaf3df6b5cd7f86b75462702d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="756" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="756" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaa4b342abd33b3ca5c41562282309af03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="765" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="765" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gae75357462b4b26a8b94c97cd04512b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="774" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="774" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gad157215b947eeaa42f2817cebe685185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_uninterpreted</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_uninterpreted</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a term of uninterpreted sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a term of uninterpreted sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="783" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="783" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga42be1121f209572968bead0a74a60477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_true</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_true</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is Boolean value true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a Boolean value true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="792" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="792" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gad2e371db2d700c9da236ff1463461459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_false</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_false</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is Boolean value false.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if <computeroutput>term</computeroutput> is a Boolean value false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="801" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="801" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gadc9fe31254a283614f004399fc8c6725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value_zero</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector value representing zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector zero value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="810" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="810" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gace12c03afef849b9ca83a49a13c260e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value_one</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value_one</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector value representing one.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector one value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="819" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="819" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gacb238425795b3b8ce7bf856886f622b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value_ones</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value_ones</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector value with all bits set to one.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector value with all bits set to one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="828" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="828" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gad6e95a9f6dc656d59e21e4aeb7d39db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value_min_signed</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value_min_signed</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector minimum signed value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector value with the most significant bit set to 1 and all other bits set to 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="838" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="838" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga1a20f9c395fa0e62f1ae73f8cf97a06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_bv_value_max_signed</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_bv_value_max_signed</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a bit-vector maximum signed value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a bit-vector value with the most significant bit set to 0 and all other bits set to 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="848" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="848" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3ecc6ad220c9cbfbde228e43cae03c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value_pos_zero</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value_pos_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point positive zero (+zero) value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point +zero value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="857" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="857" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3c6b7642e844ee2483a99bb50a1fcf5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value_neg_zero</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value_neg_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point value negative zero (-zero).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point value negative zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="866" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="866" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga8297d9cc289fb7d79be43c02fa7abe60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value_pos_inf</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value_pos_inf</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point positive infinity (+oo) value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point +oo value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="875" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="875" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga81780cfa1b0fbd2c2b2cc155aed98393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value_neg_inf</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value_neg_inf</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point negative infinity (-oo) value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point -oo value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="884" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="884" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gac39fe5279fac847b2efb0993cd733c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_fp_value_nan</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_fp_value_nan</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a floating-point NaN value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a floating-point NaN value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="893" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="893" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga1e69b5a3ad0202c4b47556b176e90bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value_rna</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value_rna</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode RNA value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a roundindg mode RNA value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="902" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="902" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga3a1e94d761563347307003f24388d8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value_rne</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value_rne</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode RNE value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode RNE value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="911" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="911" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga92d3e231c9c457797d2607639137960e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value_rtn</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value_rtn</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode RTN value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode RTN value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="920" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="920" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga90be42f9b3195a9ce88246dd1f365f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value_rtp</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value_rtp</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode RTP value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode RTP value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="929" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="929" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaadd12467f48db5ab96d1b18f2df3457f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_is_rm_value_rtz</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_is_rm_value_rtz</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a term is a rounding mode RTZ value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>term</computeroutput> is a rounding mode RTZ value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="938" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="938" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga62ff89de320dfd2646f63e6babd1c45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_term_value_get_bool</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_value_get_bool</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Boolean representation of given Boolean value term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The Boolean value term. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean representation of value term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="946" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="946" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga6ae143e7115ee05a05243ced5c617c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_term_value_get_str</definition>
        <argsstring>(BitwuzlaTerm term, uint8_t base)</argsstring>
        <name>bitwuzla_term_value_get_str</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get string representation of Boolean, bit-vector, floating-point, or rounding mode value term.</para>
<para>This returns the raw value string (as opposed to <ref refid="group__c__bitwuzlaterm_1gaff9c507bbaeef8fb88ef39b84bab489e" kindref="member">bitwuzla_term_to_string()</ref>, which returns the SMT-LIB v2 representation of a term). For example, this function returns &quot;010&quot; for a bit-vector value 2 of size 3, while <ref refid="group__c__bitwuzlaterm_1gaff9c507bbaeef8fb88ef39b84bab489e" kindref="member">bitwuzla_term_to_string()</ref> returns &quot;#b010&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The value term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base in which the output strings are given; 2 for binary, 10 for decimal, and 16 for hexadecimal.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of the value term.</para>
</simplesect>
<simplesect kind="note"><para>The returned string for floating-point values is always the binary IEEE-754 representation of the value (parameter <computeroutput>base</computeroutput> is ignored). Parameter <computeroutput>base</computeroutput> always configures the numeric base for bit-vector values, and for floating-point values in case of the tuple of strings instantiation. It is always ignored for Boolean and RoundingMode values.</para>
</simplesect>
<simplesect kind="note"><para>Return value is valid until next <computeroutput>bitwuzla_term_value_get_bv</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="972" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="972" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaca69b705a8660a78f154756d7ec9fc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_term_value_get_fp_ieee</definition>
        <argsstring>(BitwuzlaTerm term, const char **sign, const char **exponent, const char **significand, uint8_t base)</argsstring>
        <name>bitwuzla_term_value_get_fp_ieee</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>exponent</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>significand</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get string of IEEE 754 standard representation of given floating-point value term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point value term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter. String representation of the sign bit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter. String representation of the exponent bit-vector value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>significand</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter. String representation of the significand bit-vector value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base in which the output strings are given; 2 for binary, 10 for decimal, and 16 for hexadecimal.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Return values sign, exponent and significand are valid until next <computeroutput>bitwuzla_term_value_get_fp_ieee</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="991" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="991" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1ga4ad8a8bd87b9922b6561ac02f1184fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref></type>
        <definition>BitwuzlaRoundingMode bitwuzla_term_value_get_rm</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_value_get_rm</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get representation of given rounding mode value term. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The rounding mode value term. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The BitwuzlaRoundingMode representation of the given rounding mode value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1003" column="22" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1003" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gaff9c507bbaeef8fb88ef39b84bab489e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * bitwuzla_term_to_string</definition>
        <argsstring>(BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_term_to_string</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the SMT-LIB v2 string representation of a term. <simplesect kind="return"><para>A string representation of the given term. </para>
</simplesect>
<simplesect kind="note"><para>The returned char* pointer is only valid until the next <computeroutput>bitwuzla_term_to_string</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1011" column="12" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1011" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzlaterm_1gab88474ca5324cb6f1409f97ad0ff70c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_term_print</definition>
        <argsstring>(BitwuzlaTerm term, FILE *file)</argsstring>
        <name>bitwuzla_term_print</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print term in SMT-LIB v2 format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to print the term to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1018" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1018" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
        <definition>Bitwuzla * bitwuzla_new</definition>
        <argsstring>(const BitwuzlaOptions *options)</argsstring>
        <name>bitwuzla_new</name>
        <param>
          <type>const <ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Bitwuzla instance.</para>
<para>The returned instance must be deleted via <computeroutput><ref refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" kindref="member">bitwuzla_delete()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated options (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the created Bitwuzla instance.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" kindref="member">bitwuzla_delete</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1044" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1044" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_delete</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_delete</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a Bitwuzla instance.</para>
<para>The given instance must have been created via <computeroutput><ref refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" kindref="member">bitwuzla_new()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" kindref="member">bitwuzla_new</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1056" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1056" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_termination_callback</definition>
        <argsstring>(Bitwuzla *bitwuzla, int32_t(*fun)(void *), void *state)</argsstring>
        <name>bitwuzla_set_termination_callback</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>int32_t(*)(void *)</type>
          <declname>fun</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure a termination callback function.</para>
<para>The <computeroutput>state</computeroutput> of the callback can be retrieved via <computeroutput><ref refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" kindref="member">bitwuzla_get_termination_callback_state()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function, returns a value != 0 if <computeroutput>bitwuzla</computeroutput> should be terminated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput>bitwuzla_terminate</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" kindref="member">bitwuzla_get_termination_callback_state</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1073" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1073" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bitwuzla_get_termination_callback_state</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_get_termination_callback_state</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of the termination callback function.</para>
<para>The returned object representing the state of the callback corresponds to the <computeroutput>state</computeroutput> configured as argument to the callback function via <computeroutput><ref refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" kindref="member">bitwuzla_set_termination_callback()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The object passed as argument <computeroutput>state</computeroutput> to the callback function.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput>bitwuzla_terminate</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" kindref="member">bitwuzla_set_termination_callback</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1092" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1092" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga88b7e62e7f4e55cfea8246f0ef1475cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_abort_callback</definition>
        <argsstring>(void(*fun)(const char *msg))</argsstring>
        <name>bitwuzla_set_abort_callback</name>
        <param>
          <type>void(*)(const char *msg)</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure an abort callback function, which is called instead of exit on abort conditions.</para>
<para><simplesect kind="note"><para>If the abort callback function throws a C++ exception, this must be thrown via std::rethrow_if_nested.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function. Argument <computeroutput>msg</computeroutput> explains the reason for the abort. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1104" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga71883bf281f1f07907bb20864d4dc2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_push</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint64_t nlevels)</argsstring>
        <name>bitwuzla_push</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nlevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push context levels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nlevels</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of context levels to push.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1115" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gaad3d52b312fd1d32799c8c331e37f44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_pop</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint64_t nlevels)</argsstring>
        <name>bitwuzla_pop</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nlevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pop context levels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nlevels</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of context levels to pop.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1126" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_assert</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_assert</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assert formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The formula to assert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1134" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga42acd0a49fd3d85ed882a34a8733b01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_assertions</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_assertions</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the set of currently asserted formulas. <simplesect kind="return"><para>The asserted formulas. </para>
</simplesect>
<simplesect kind="return"><para>An array with the set of asserted formulas of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_assertions</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1142" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1142" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga301c640bc176890a0a87659eddc46711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_is_unsat_assumption</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_is_unsat_assumption</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if an assumption is an unsat assumption.</para>
<para>Unsat assumptions are assumptions that force an input formula to become unsatisfiable. Unsat assumptions handling in Bitwuzla is analogous to failed assumptions in MiniSAT.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The assumption to check for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if given assumption is an unsat assumption.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1163" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga4f8606eeb86c44f82d57a8353eb4a889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_unsat_assumptions</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_unsat_assumptions</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the set of unsat assumptions.</para>
<para>Unsat assumptions are assumptions that force an input formula to become unsatisfiable. Unsat assumptions handling in Bitwuzla is analogous to failed assumptions in MiniSAT.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the size of the returned array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with unsat assumptions of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_unsat_assumptions</computeroutput> call.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1185" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1185" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga3be61c745504ece6f8061d325779e075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_unsat_core</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_unsat_core</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the unsat core (unsat assertions).</para>
<para>The unsat core consists of the set of assertions that force an input formula to become unsatisfiable.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the size of the returned array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with unsat assertions of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_unsat_core</computeroutput> call.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1206" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1206" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga245419e6c03f5859e4beb3a583a05bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_simplify</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_simplify</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simplify the current input formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Each call to <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> and <computeroutput><ref refid="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" kindref="member">bitwuzla_check_sat_assuming()</ref></computeroutput> simplifies the input formula as a preprocessing step. It is not necessary to call this function explicitly in the general case.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1220" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1220" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></type>
        <definition>BitwuzlaResult bitwuzla_check_sat</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_check_sat</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check satisfiability of current input formula.</para>
<para>An input formula consists of assertions added via <computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert()</ref></computeroutput>. The search for a solution can by guided by additionally making assumptions (see <computeroutput>bitwuzla_check_sat_assuming</computeroutput>).</para>
<para><simplesect kind="note"><para>Assertions and assumptions are combined via Boolean and.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput> if the input formula is satisfiable and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput> if it is unsatisfiable, and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" kindref="member">BITWUZLA_UNKNOWN</ref></computeroutput> when neither satisfiability nor unsatisfiability was determined. This can happen when <computeroutput>bitwuzla</computeroutput> was terminated via a termination callback.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1244" column="16" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1244" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></type>
        <definition>BitwuzlaResult bitwuzla_check_sat_assuming</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint32_t argc, BitwuzlaTerm args[])</argsstring>
        <name>bitwuzla_check_sat_assuming</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check satisfiability of current input formula wrt to the given set of assumptions.</para>
<para>An input formula consists of assertions added via <computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert()</ref></computeroutput>. The search for a solution can by guided by additionally making assumptions (the given set of assumptions <computeroutput>args</computeroutput>).</para>
<para><simplesect kind="note"><para>Assertions and assumptions are combined via Boolean and.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of assumptions in <computeroutput>args</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The assumptions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput> if the input formula is satisfiable and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput> if it is unsatisfiable, and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" kindref="member">BITWUZLA_UNKNOWN</ref></computeroutput> when neither satisfiability nor unsatisfiability was determined. This can happen when <computeroutput>bitwuzla</computeroutput> was terminated via a termination callback.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1271" column="16" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1271" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gae609c31695d3b4f95cab6ff9725d5415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_get_value</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_get_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a term representing the model value of a given term.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term to query a model value for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the model value of term <computeroutput>term</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1288" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1288" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga4655af630e087a0bd001a90dc4094819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_print_formula</definition>
        <argsstring>(Bitwuzla *bitwuzla, const char *format, FILE *file)</argsstring>
        <name>bitwuzla_print_formula</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print the current input formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The output format for printing the formula. Currently, only <computeroutput>&quot;smt2&quot;</computeroutput> for the SMT-LIB v2 format is supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to print the formula to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1298" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1298" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_get_statistics</definition>
        <argsstring>(Bitwuzla *bitwuzla, const char ***keys, const char ***values, size_t *size)</argsstring>
        <name>bitwuzla_get_statistics</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>values</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current statistics.</para>
<para>The statistics are retrieved as a mapping from statistic name (<computeroutput>keys</computeroutput>) to statistic value (<computeroutput>values</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting set of statistic names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting set of statistic values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting size of <computeroutput>keys</computeroutput> and <computeroutput>values</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Output parameters <computeroutput>keys</computeroutput> and <computeroutput>values</computeroutput> are only valid until the next call to <computeroutput><ref refid="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" kindref="member">bitwuzla_get_statistics()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1314" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1314" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1ga69dc2abdb304f46618b87e5ad0955361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_array_sort</definition>
        <argsstring>(BitwuzlaSort index, BitwuzlaSort element)</argsstring>
        <name>bitwuzla_mk_array_sort</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index sort of the array sort. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element sort of the array sort. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array sort which maps sort <computeroutput>index</computeroutput> to sort <computeroutput>element</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga223021177f73fb498200dc54a73cd222" kindref="member">bitwuzla_sort_is_array</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gace27780a390857382fe95dcf1883fcc3" kindref="member">bitwuzla_sort_array_get_index</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga5260f3a3293ab59ecbba24500e9a484f" kindref="member">bitwuzla_sort_array_get_element</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga9f1e378f65a01e952266fa3f4329edfb" kindref="member">bitwuzla_term_is_array</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gaede3ec49cd0246cf82aba9d6f56cf1ab" kindref="member">bitwuzla_term_array_get_index_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga3b3d22be4845607e9fef67234bbe49b3" kindref="member">bitwuzla_term_array_get_element_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1344" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1344" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1gacdf18c2d5a68f684eb93c4e0a781625c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_bool_sort</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_mk_bool_sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a Boolean sort. <simplesect kind="return"><para>A Boolean sort. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1350" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1350" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_bv_sort</definition>
        <argsstring>(uint64_t size)</argsstring>
        <name>bitwuzla_mk_bv_sort</name>
        <param>
          <type>uint64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector sort of given size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the bit-vector sort. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bit-vector sort of given size.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga144ec29d4ab20bf57771fd8176d8a97f" kindref="member">bitwuzla_sort_is_bv</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga72f79b3c0df6adf66106b61fe8b7f175" kindref="member">bitwuzla_sort_bv_get_size</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gab0a016bbaf3df6b5cd7f86b75462702d" kindref="member">bitwuzla_term_is_bv</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gaca4f4cdbeb541b7383d05505869b8c52" kindref="member">bitwuzla_term_bv_get_size</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1364" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1364" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_fp_sort</definition>
        <argsstring>(uint64_t exp_size, uint64_t sig_size)</argsstring>
        <name>bitwuzla_mk_fp_sort</name>
        <param>
          <type>uint64_t</type>
          <declname>exp_size</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>sig_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point sort of given exponent and significand size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exp_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the exponent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sig_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the significand (including sign bit). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A floating-point sort of given format.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gadf39de9ace9af52172ed29d7360fe498" kindref="member">bitwuzla_sort_is_fp</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gaf70dd1197655ee8300524ce23ffd6647" kindref="member">bitwuzla_sort_fp_get_exp_size</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga2dd5e721758bce9191d8ad1bba9d0895" kindref="member">bitwuzla_sort_fp_get_sig_size</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gaa4b342abd33b3ca5c41562282309af03" kindref="member">bitwuzla_term_is_fp</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga3433f784e5828c28de594c2eae2bfb25" kindref="member">bitwuzla_term_fp_get_exp_size</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gadb45c01bf4a9299f2423e1eaaadb0033" kindref="member">bitwuzla_term_fp_get_sig_size</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1381" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1381" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1gab67bdee3bbcfc271a36dff873ba199c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_fun_sort</definition>
        <argsstring>(uint64_t arity, BitwuzlaSort domain[], BitwuzlaSort codomain)</argsstring>
        <name>bitwuzla_mk_fun_sort</name>
        <param>
          <type>uint64_t</type>
          <declname>arity</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>domain</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>codomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a function sort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arity</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments to the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain sorts (the sorts of the arguments). The number of sorts in this vector must match <computeroutput>arity</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codomain</parametername>
</parameternamelist>
<parameterdescription>
<para>The codomain sort (the sort of the return value). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A function sort of given domain and codomain sorts.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga28ee43c983d134b737d3020724e11778" kindref="member">bitwuzla_sort_is_fun</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gacfb5896f5bcf57d84cd4e7f6673cb91b" kindref="member">bitwuzla_sort_fun_get_arity</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gad524c5ed6629d63dcb36cfa833993dd7" kindref="member">bitwuzla_sort_fun_get_domain_sorts</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gac293ff68f4f2109f45232a057b591685" kindref="member">bitwuzla_sort_fun_get_codomain</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gacfbbebc377fc344eb21d06a2236c8575" kindref="member">bitwuzla_term_is_fun</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga691c7593f89b78f0aff9a975d7605809" kindref="member">bitwuzla_term_fun_get_arity</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga3989a0aec5d263aa2850237932de03e3" kindref="member">bitwuzla_term_fun_get_domain_sorts</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1ga6e7d67964c94704bd225f011a70caf49" kindref="member">bitwuzla_term_fun_get_codomain_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1402" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1402" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1ga6c0ad22f24247d6998225cd1105a93f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_rm_sort</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_mk_rm_sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a Roundingmode sort. <simplesect kind="return"><para>A Roundingmode sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1ga2a3f0e4bc15dec1ce49319265130501b" kindref="member">bitwuzla_sort_is_rm</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gae75357462b4b26a8b94c97cd04512b2e" kindref="member">bitwuzla_term_is_rm</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1413" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1413" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__sort__creation_1ga43c064c2ea8b99a1e6543bc1d814d857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
        <definition>BitwuzlaSort bitwuzla_mk_uninterpreted_sort</definition>
        <argsstring>(const char *symbol)</argsstring>
        <name>bitwuzla_mk_uninterpreted_sort</name>
        <param>
          <type>const char *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an uninterpreted sort. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol of the sort. May be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A uninterpreted sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlasort_1gaf57078a6b8847a862a43899b94b1a176" kindref="member">bitwuzla_sort_is_uninterpreted</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaterm_1gad157215b947eeaa42f2817cebe685185" kindref="member">bitwuzla_term_is_uninterpreted</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1423" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1423" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga66e28b1b57b92d8d85d489c9ede4bbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_true</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_mk_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a true value. <simplesect kind="return"><para>A term representing true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1439" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1439" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga84036bd7ceabb96fd1dd6d04d08563c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_false</definition>
        <argsstring>()</argsstring>
        <name>bitwuzla_mk_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a false value. <simplesect kind="return"><para>A term representing false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1445" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1445" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga5a59a075d6242f52bce659a3b6b1a4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_zero</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_bv_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the bit-vector value 0 of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1456" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1456" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga41e3edf7686bebdf663baa4a41ae876f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_one</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_bv_one</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value one.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the bit-vector value 1 of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1467" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1467" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga75fe6de097b4e057d584ee1da6fa8ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_ones</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_bv_ones</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value where all bits are set to 1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the bit-vector value of given sort where all bits are set to 1. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1478" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1478" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga40015b4da40e207529d25cbee71d9a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_min_signed</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_bv_min_signed</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector minimum signed value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the bit-vector value of given sort where the MSB is set to 1 and all remaining bits are set to 0. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1489" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1489" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gac59dbc5f424a1b1f3d4574018669c9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_max_signed</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_bv_max_signed</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector maximum signed value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the bit-vector value of given sort where the MSB is set to 0 and all remaining bits are set to 1. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1499" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1499" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaef14d5ef49ea543022687f41ef1f50a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_pos_zero</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_fp_pos_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point positive zero value (SMT-LIB: <computeroutput>+zero</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the floating-point positive zero value of given floating-point sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1510" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1510" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga07c88d8aea8e10b6d141c2ca5b9241eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_neg_zero</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_fp_neg_zero</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point negative zero value (SMT-LIB: <computeroutput>-zero</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the floating-point negative zero value of given floating-point sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1521" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1521" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaef1f309dc733bc4bc4efca1f166b479e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_pos_inf</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_fp_pos_inf</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point positive infinity value (SMT-LIB: <computeroutput>+oo</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the floating-point positive infinity value of given floating-point sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1532" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1532" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gac202139fb0cdb5aeb74d2251145d1cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_neg_inf</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_fp_neg_inf</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point negative infinity value (SMT-LIB: <computeroutput>-oo</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the floating-point negative infinity value of given floating-point sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1543" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1543" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga7f70be4b69bd56c7ce541ec7954b8693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_nan</definition>
        <argsstring>(BitwuzlaSort sort)</argsstring>
        <name>bitwuzla_mk_fp_nan</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point NaN value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the floating-point NaN value of given floating-point sort. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1554" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1554" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga125d09b9ee548724b2cbdf908516883b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_value</definition>
        <argsstring>(BitwuzlaSort sort, const char *value, uint8_t base)</argsstring>
        <name>bitwuzla_mk_bv_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value from its string representation.</para>
<para>Parameter <computeroutput>base</computeroutput> determines the base of the string representation.</para>
<para><simplesect kind="note"><para>Given value must fit into a bit-vector of given size (sort).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base in which the string is given; 2 for binary, 10 for decimal, and 16 for hexadecimal.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAL, representing the bit-vector value of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1574" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1574" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga6ff3a9d94143fb86984e7fa31cb53f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_value_uint64</definition>
        <argsstring>(BitwuzlaSort sort, uint64_t value)</argsstring>
        <name>bitwuzla_mk_bv_value_uint64</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value from its unsigned integer representation.</para>
<para><simplesect kind="note"><para>Given value must fit into a bit-vector of given size (sort).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The unsigned integer representation of the bit-vector value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAL, representing the bit-vector value of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1592" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1592" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga5afafc44f16c593fc8ed62a1ed4abcce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_bv_value_int64</definition>
        <argsstring>(BitwuzlaSort sort, int64_t value)</argsstring>
        <name>bitwuzla_mk_bv_value_int64</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a bit-vector value from its signed integer representation.</para>
<para><simplesect kind="note"><para>Given value must fit into a bit-vector of given size (sort).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The unsigned integer representation of the bit-vector value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAL, representing the bit-vector value of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1608" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1608" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gae95213b8816199235169eedefad3fc6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_value</definition>
        <argsstring>(BitwuzlaTerm bv_sign, BitwuzlaTerm bv_exponent, BitwuzlaTerm bv_significand)</argsstring>
        <name>bitwuzla_mk_fp_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>bv_sign</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>bv_exponent</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>bv_significand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point value from its IEEE 754 standard representation given as three bit-vector values representing the sign bit, the exponent and the significand.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bv_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>The sign bit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bv_exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>The exponent bit-vector value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bv_significand</parametername>
</parameternamelist>
<parameterdescription>
<para>The significand bit-vector value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAL, representing the floating-point value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1622" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1622" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga76ae4ddccb472f36344fb5ce95b9c5e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_from_real</definition>
        <argsstring>(BitwuzlaSort sort, BitwuzlaTerm rm, const char *real)</argsstring>
        <name>bitwuzla_mk_fp_from_real</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>rm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>real</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point value from its real representation, given as a decimal string, with respect to given rounding mode.</para>
<para><simplesect kind="note"><para>Given rounding mode may be an arbitrary, non-value rounding mode term. If it is a value, the returned term will be a floating-point value, else a non-value floating-point term.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>The rounding mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real</parametername>
</parameternamelist>
<parameterdescription>
<para>The decimal string representing a real value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A floating-point representation of the given real string. If <computeroutput>rm</computeroutput> is of kind BITWUZLA_KIND_VALUE the floating-point will be of kind BITWUZLA_KIND_VALUE, else it will be a non-value term. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1644" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1644" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaee5e7892631d4f0e6f0fc3b593213572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_fp_from_rational</definition>
        <argsstring>(BitwuzlaSort sort, BitwuzlaTerm rm, const char *num, const char *den)</argsstring>
        <name>bitwuzla_mk_fp_from_rational</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>rm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>den</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a floating-point value from its rational representation, given as a two decimal strings representing the numerator and denominator, with respect to given rounding mode.</para>
<para><simplesect kind="note"><para>Given rounding mode may be an arbitrary, non-value rounding mode term. If it is a value, the returned term will be a floating-point value, else a non-value floating-point term.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>The rounding mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The decimal string representing the numerator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>den</parametername>
</parameternamelist>
<parameterdescription>
<para>The decimal string representing the denominator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A floating-point representation of the given rational string. If <computeroutput>rm</computeroutput> is of kind BITWUZLA_KIND_VALUE the floating-point will be of kind BITWUZLA_KIND_VALUE, else it will be a non-value term. </para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1668" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1668" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga456d31991ff15a1df637c672c2a7e996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_rm_value</definition>
        <argsstring>(BitwuzlaRoundingMode rm)</argsstring>
        <name>bitwuzla_mk_rm_value</name>
        <param>
          <type><ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a rounding mode value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>The rounding mode value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAL, representing the rounding mode value.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1684" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1684" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term1</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg)</argsstring>
        <name>bitwuzla_mk_term1</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a term of given kind with one argument term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument to the operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1697" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1697" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term2</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg0, BitwuzlaTerm arg1)</argsstring>
        <name>bitwuzla_mk_term2</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a term of given kind with two argument terms.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first argument to the operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second argument to the operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1711" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1711" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term3</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg0, BitwuzlaTerm arg1, BitwuzlaTerm arg2)</argsstring>
        <name>bitwuzla_mk_term3</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a term of given kind with three argument terms.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first argument to the operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second argument to the operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>The third argument to the operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1728" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1728" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term</definition>
        <argsstring>(BitwuzlaKind kind, uint32_t argc, BitwuzlaTerm args[])</argsstring>
        <name>bitwuzla_mk_term</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a term of given kind with the given argument terms.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of argument terms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument terms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1745" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1745" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term1_indexed1</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg, uint64_t idx)</argsstring>
        <name>bitwuzla_mk_term1_indexed1</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an indexed term of given kind with one argument term and one index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an indexed operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1761" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1761" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gab7607ce0925baede9fe4809aa3ec7298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term1_indexed2</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg, uint64_t idx0, uint64_t idx1)</argsstring>
        <name>bitwuzla_mk_term1_indexed2</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an indexed term of given kind with one argument term and two indices.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an indexed operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1778" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1778" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga5b02a9794f16846a96ca0961be42615c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term2_indexed1</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg0, BitwuzlaTerm arg1, uint64_t idx)</argsstring>
        <name>bitwuzla_mk_term2_indexed1</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an indexed term of given kind with two argument terms and one index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an indexed operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1796" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1796" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term2_indexed2</definition>
        <argsstring>(BitwuzlaKind kind, BitwuzlaTerm arg0, BitwuzlaTerm arg1, uint64_t idx0, uint64_t idx1)</argsstring>
        <name>bitwuzla_mk_term2_indexed2</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg0</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an indexed term of given kind with two argument terms and two indices.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second argument term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an indexed operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1815" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1815" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga5a32d41a72e80f9ab9fd8b922a2bc22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_term_indexed</definition>
        <argsstring>(BitwuzlaKind kind, uint32_t argc, BitwuzlaTerm args[], uint32_t idxc, const uint64_t idxs[])</argsstring>
        <name>bitwuzla_mk_term_indexed</name>
        <param>
          <type><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idxc</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>idxs</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an indexed term of given kind with the given argument terms and indices.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of argument terms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument terms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idxc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of indices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idxs</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing an indexed operation of given kind.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1836" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1836" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga885a1f71a433bf5ad8b3860d45d766a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_const</definition>
        <argsstring>(BitwuzlaSort sort, const char *symbol)</argsstring>
        <name>bitwuzla_mk_const</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a (first-order) constant of given sort with given symbol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the constant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol of the constant.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_CONST, representing the constant.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga69dc2abdb304f46618b87e5ad0955361" kindref="member">bitwuzla_mk_array_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1gacdf18c2d5a68f684eb93c4e0a781625c" kindref="member">bitwuzla_mk_bool_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1gab67bdee3bbcfc271a36dff873ba199c8" kindref="member">bitwuzla_mk_fun_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6c0ad22f24247d6998225cd1105a93f5" kindref="member">bitwuzla_mk_rm_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1858" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1858" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1gad92c00bf5c5c651384b5550ec4161357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_const_array</definition>
        <argsstring>(BitwuzlaSort sort, BitwuzlaTerm value)</argsstring>
        <name>bitwuzla_mk_const_array</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a one-dimensional constant array of given sort, initialized with given value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The term to initialize the elements of the array with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_CONST_ARRAY, representing a constant array of given sort.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga69dc2abdb304f46618b87e5ad0955361" kindref="member">bitwuzla_mk_array_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1873" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1873" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__creation_1ga4e0b935b7719c68a38200d946ea29390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_mk_var</definition>
        <argsstring>(BitwuzlaSort sort, const char *symbol)</argsstring>
        <name>bitwuzla_mk_var</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref></type>
          <declname>sort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a variable of given sort with given symbol.</para>
<para><simplesect kind="note"><para>This creates a variable to be bound by quantifiers or lambdas.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort of the variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol of the variable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term of kind BITWUZLA_KIND_VAR, representing the variable.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__sort__creation_1gacdf18c2d5a68f684eb93c4e0a781625c" kindref="member">bitwuzla_mk_bool_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1gab67bdee3bbcfc271a36dff873ba199c8" kindref="member">bitwuzla_mk_fun_sort</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__sort__creation_1ga6c0ad22f24247d6998225cd1105a93f5" kindref="member">bitwuzla_mk_rm_sort</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1892" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1892" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__substitution_1gaaec7b262c26d704a75dd2f6454c92756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_substitute_term</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term, size_t map_size, BitwuzlaTerm map_keys[], BitwuzlaTerm map_values[])</argsstring>
        <name>bitwuzla_substitute_term</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>map_size</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>map_keys</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>map_values</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Substitute a set of keys with their corresponding values in the given term.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term in which the keys are to be substituted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the substitution map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_values</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapped values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The resulting term from this substitution. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1915" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1915" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__term__substitution_1ga4d9ff44a9c8a967c6945445f5062443e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_substitute_terms</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t terms_size, BitwuzlaTerm terms[], size_t map_size, BitwuzlaTerm map_keys[], BitwuzlaTerm map_values[])</argsstring>
        <name>bitwuzla_substitute_terms</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>terms_size</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>terms</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>map_size</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>map_keys</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>map_values</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Substitute a set of keys with their corresponding values in the set of given terms.</para>
<para>The terms in <computeroutput>terms</computeroutput> are replaced with the terms resulting from this substitutions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terms_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the set of terms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terms</parametername>
</parameternamelist>
<parameterdescription>
<para>The terms in which the keys are to be substituted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the substitution map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_values</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapped values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1935" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1935" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Bitwuzla:<sp/>Satisfiability<sp/>Modulo<sp/>Theories<sp/>(SMT)<sp/>solver.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>by<sp/>the<sp/>authors<sp/>listed<sp/>in<sp/>the<sp/>AUTHORS<sp/>file<sp/>at</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/AUTHORS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Bitwuzla<sp/>under<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>COPYING<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>information<sp/>at<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/COPYING</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_C_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITWUZLA_API_C_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="bitwuzla_8h_1a66d8049b17c3c2e1418955ed7e53800f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="enums_8h" kindref="compound">bitwuzla/enums.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="option_8h" kindref="compound">bitwuzla/option.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Library<sp/>info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__c__libinfo_1gaa116a8360528b0ff56d1d36879a8dce1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__libinfo_1gaa116a8360528b0ff56d1d36879a8dce1" kindref="member">bitwuzla_copyright</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__c__libinfo_1ga5efe0be5bf40e0e2ec53c3fb7739eeef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__libinfo_1ga5efe0be5bf40e0e2ec53c3fb7739eeef" kindref="member">bitwuzla_version</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__c__libinfo_1ga7d88fb761fd5f64f9c14806666eec3c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__libinfo_1ga7d88fb761fd5f64f9c14806666eec3c9" kindref="member">bitwuzla_git_id</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaOptionInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structBitwuzlaOptionInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="structBitwuzlaOptionInfo_1a3a58eec6fc27a64028124caa3032af37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/><ref refid="structBitwuzlaOptionInfo_1a3a58eec6fc27a64028124caa3032af37" kindref="member">opt</ref>;</highlight></codeline>
<codeline lineno="70" refid="structBitwuzlaOptionInfo_1afa075308de7ab7b7f4da50c2016ab9f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structBitwuzlaOptionInfo_1afa075308de7ab7b7f4da50c2016ab9f6" kindref="member">shrt</ref>;</highlight></codeline>
<codeline lineno="72" refid="structBitwuzlaOptionInfo_1a9e0862ed850268624e82d476a678fc77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structBitwuzlaOptionInfo_1a9e0862ed850268624e82d476a678fc77" kindref="member">lng</ref>;</highlight></codeline>
<codeline lineno="74" refid="structBitwuzlaOptionInfo_1ab6e641c1e6490c7df67b6c291fcb20d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structBitwuzlaOptionInfo_1ab6e641c1e6490c7df67b6c291fcb20d1" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="76" refid="structBitwuzlaOptionInfo_1a8a86e5b13551115832ab8dd73468a1c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structBitwuzlaOptionInfo_1a8a86e5b13551115832ab8dd73468a1c8" kindref="member">is_numeric</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83" refid="structBitwuzlaOptionInfo_1a51626618d07d2990bee37c61e02ff191" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structBitwuzlaOptionInfo_1a51626618d07d2990bee37c61e02ff191" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="85" refid="structBitwuzlaOptionInfo_1a93772f1d17c4b2435c38c94cc811b2a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structBitwuzlaOptionInfo_1a93772f1d17c4b2435c38c94cc811b2a4" kindref="member">dflt</ref>;</highlight></codeline>
<codeline lineno="87" refid="structBitwuzlaOptionInfo_1a5c18bee9f6d1b2585ac5b42ca70712d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structBitwuzlaOptionInfo_1a5c18bee9f6d1b2585ac5b42ca70712d1" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="89" refid="structBitwuzlaOptionInfo_1a81a7a0f8863b72bfea525718b0ef7847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structBitwuzlaOptionInfo_1a81a7a0f8863b72bfea525718b0ef7847" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="90" refid="structBitwuzlaOptionInfo_1afc9822d1fd9dd04dd0e7111eee2f05e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structBitwuzlaOptionInfo_1afc9822d1fd9dd04dd0e7111eee2f05e5" kindref="member">numeric</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95" refid="structBitwuzlaOptionInfo_1a94c94a1845181a312e076b9f72f8f93c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structBitwuzlaOptionInfo_1a94c94a1845181a312e076b9f72f8f93c" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="97" refid="structBitwuzlaOptionInfo_1aac8c8d0492eee62afd1be3c59d465ac5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structBitwuzlaOptionInfo_1aac8c8d0492eee62afd1be3c59d465ac5" kindref="member">dflt</ref>;</highlight></codeline>
<codeline lineno="99" refid="structBitwuzlaOptionInfo_1ab7eee70697921a48a6f696b9a1d0c7e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structBitwuzlaOptionInfo_1ab7eee70697921a48a6f696b9a1d0c7e8" kindref="member">num_modes</ref>;</highlight></codeline>
<codeline lineno="101" refid="structBitwuzlaOptionInfo_1a785d79a595b694c98af58035949c1d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structBitwuzlaOptionInfo_1a785d79a595b694c98af58035949c1d5b" kindref="member">modes</ref>;</highlight></codeline>
<codeline lineno="102" refid="structBitwuzlaOptionInfo_1a7e2fda39a7c665c57e3879785072c60f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structBitwuzlaOptionInfo_1a7e2fda39a7c665c57e3879785072c60f" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref><sp/><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaOptions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__c__bitwuzlaoptions_1gaf208fc6d0fe345818d9338dba99f9e7f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*<ref refid="group__c__bitwuzlaoptions_1gaf208fc6d0fe345818d9338dba99f9e7f" kindref="member">bitwuzla_options_new</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="group__c__bitwuzlaoptions_1ga91f0479c3a525e2deabbc0dea5a6f954" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1ga91f0479c3a525e2deabbc0dea5a6f954" kindref="member">bitwuzla_options_delete</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group__c__bitwuzlaoptions_1ga41012ed3772f0b013182107452556e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1ga41012ed3772f0b013182107452556e3c" kindref="member">bitwuzla_option_is_numeric</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option);</highlight></codeline>
<codeline lineno="155" refid="group__c__bitwuzlaoptions_1gafbc68bda6a3c852ea886cc1cef1deb70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1gafbc68bda6a3c852ea886cc1cef1deb70" kindref="member">bitwuzla_option_is_mode</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,<sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>val);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__c__bitwuzlaoptions_1gaff7ff22db2d7d6fa22ba35914e0b7119" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1gaff7ff22db2d7d6fa22ba35914e0b7119" kindref="member">bitwuzla_set_option_mode</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__c__bitwuzlaoptions_1ga37742ef375def28c195c79249142216d" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlaoptions_1ga37742ef375def28c195c79249142216d" kindref="member">bitwuzla_get_option</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,<sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group__c__bitwuzlaoptions_1ga4dcd195b9e78bd190b5e96ff3cb0d7f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlaoptions_1ga4dcd195b9e78bd190b5e96ff3cb0d7f5" kindref="member">bitwuzla_get_option_mode</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group__c__bitwuzlaoptions_1gaa46bec92f4a81ea8a7d94f7ccd205b34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaoptions_1gaa46bec92f4a81ea8a7d94f7ccd205b34" kindref="member">bitwuzla_get_option_info</ref>(<ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="option_8h_1a4b3d097604eab4eab9fbd0427be96884" kindref="member">BitwuzlaOption</ref><sp/>option,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structBitwuzlaOptionInfo" kindref="compound">BitwuzlaOptionInfo</ref><sp/>*info);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaResult<sp/>(Satisfiability<sp/>Result)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>BitwuzlaResult<sp/>enum<sp/>is<sp/>defined<sp/>in<sp/>api/enums.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="bitwuzla_8h_1a68fc48d91cbcea858e83b1b7fc18837c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bitwuzla_8h_1a68fc48d91cbcea858e83b1b7fc18837c" kindref="member">bitwuzla_result_to_string</ref>(<ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref><sp/>result);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaRoundingMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>BitwuzlaRoundingMode<sp/>enum<sp/>is<sp/>defined<sp/>in<sp/>api/enums.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="bitwuzla_8h_1ad175d1c194384f7c99e9154b6683ce44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bitwuzla_8h_1ad175d1c194384f7c99e9154b6683ce44" kindref="member">bitwuzla_rm_to_string</ref>(<ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref><sp/>rm);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaKind<sp/>(Term<sp/>Kind)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>BitwuzlaKind<sp/>enum<sp/>is<sp/>defined<sp/>in<sp/>api/enums.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="bitwuzla_8h_1a6380e4fe0d9d9633aa10c835effcb937" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bitwuzla_8h_1a6380e4fe0d9d9633aa10c835effcb937" kindref="member">bitwuzla_kind_to_string</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaSort<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="group__c__bitwuzlasort_1ga112749aa79f46e46e690bcceee03ad4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga112749aa79f46e46e690bcceee03ad4a" kindref="member">bitwuzla_sort_hash</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__c__bitwuzlasort_1ga72f79b3c0df6adf66106b61fe8b7f175" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlasort_1ga72f79b3c0df6adf66106b61fe8b7f175" kindref="member">bitwuzla_sort_bv_get_size</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__c__bitwuzlasort_1gaf70dd1197655ee8300524ce23ffd6647" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlasort_1gaf70dd1197655ee8300524ce23ffd6647" kindref="member">bitwuzla_sort_fp_get_exp_size</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__c__bitwuzlasort_1ga2dd5e721758bce9191d8ad1bba9d0895" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlasort_1ga2dd5e721758bce9191d8ad1bba9d0895" kindref="member">bitwuzla_sort_fp_get_sig_size</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__c__bitwuzlasort_1gace27780a390857382fe95dcf1883fcc3" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlasort_1gace27780a390857382fe95dcf1883fcc3" kindref="member">bitwuzla_sort_array_get_index</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="group__c__bitwuzlasort_1ga5260f3a3293ab59ecbba24500e9a484f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlasort_1ga5260f3a3293ab59ecbba24500e9a484f" kindref="member">bitwuzla_sort_array_get_element</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="group__c__bitwuzlasort_1gad524c5ed6629d63dcb36cfa833993dd7" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>*<ref refid="group__c__bitwuzlasort_1gad524c5ed6629d63dcb36cfa833993dd7" kindref="member">bitwuzla_sort_fun_get_domain_sorts</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="group__c__bitwuzlasort_1gac293ff68f4f2109f45232a057b591685" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlasort_1gac293ff68f4f2109f45232a057b591685" kindref="member">bitwuzla_sort_fun_get_codomain</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group__c__bitwuzlasort_1gacfb5896f5bcf57d84cd4e7f6673cb91b" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlasort_1gacfb5896f5bcf57d84cd4e7f6673cb91b" kindref="member">bitwuzla_sort_fun_get_arity</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group__c__bitwuzlasort_1ga1e6568c1b16b853fdde546cb1843251f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlasort_1ga1e6568c1b16b853fdde546cb1843251f" kindref="member">bitwuzla_sort_get_uninterpreted_symbol</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__c__bitwuzlasort_1ga5f7dd39207213dd7cbbc56483cdc81ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga5f7dd39207213dd7cbbc56483cdc81ca" kindref="member">bitwuzla_sort_is_equal</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort0,<sp/><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort1);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="group__c__bitwuzlasort_1ga223021177f73fb498200dc54a73cd222" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga223021177f73fb498200dc54a73cd222" kindref="member">bitwuzla_sort_is_array</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__c__bitwuzlasort_1gaa45fcddbef9c1431fa65f5d4fbc09220" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1gaa45fcddbef9c1431fa65f5d4fbc09220" kindref="member">bitwuzla_sort_is_bool</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__c__bitwuzlasort_1ga144ec29d4ab20bf57771fd8176d8a97f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga144ec29d4ab20bf57771fd8176d8a97f" kindref="member">bitwuzla_sort_is_bv</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="group__c__bitwuzlasort_1gadf39de9ace9af52172ed29d7360fe498" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1gadf39de9ace9af52172ed29d7360fe498" kindref="member">bitwuzla_sort_is_fp</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="group__c__bitwuzlasort_1ga28ee43c983d134b737d3020724e11778" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga28ee43c983d134b737d3020724e11778" kindref="member">bitwuzla_sort_is_fun</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="group__c__bitwuzlasort_1ga2a3f0e4bc15dec1ce49319265130501b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga2a3f0e4bc15dec1ce49319265130501b" kindref="member">bitwuzla_sort_is_rm</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="group__c__bitwuzlasort_1gaf57078a6b8847a862a43899b94b1a176" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1gaf57078a6b8847a862a43899b94b1a176" kindref="member">bitwuzla_sort_is_uninterpreted</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="group__c__bitwuzlasort_1gaf3f7383f2c912dec0eea99e08d1232ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlasort_1gaf3f7383f2c912dec0eea99e08d1232ae" kindref="member">bitwuzla_sort_to_string</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="group__c__bitwuzlasort_1ga73101e68c29aaedffa07c7ed7b8569be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlasort_1ga73101e68c29aaedffa07c7ed7b8569be" kindref="member">bitwuzla_sort_print</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/>FILE<sp/>*file);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BitwuzlaTerm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="group__c__bitwuzlaterm_1gab61f1c9a4e2f27dec964c29dbcda6d22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gab61f1c9a4e2f27dec964c29dbcda6d22" kindref="member">bitwuzla_term_hash</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="group__c__bitwuzlaterm_1ga5bf4cc6b1847e96ea0296713083f1b95" refkind="member"><highlight class="normal"><ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/><ref refid="group__c__bitwuzlaterm_1ga5bf4cc6b1847e96ea0296713083f1b95" kindref="member">bitwuzla_term_get_kind</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="group__c__bitwuzlaterm_1ga5975a209491cf1cc7eecb856447b1246" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>*<ref refid="group__c__bitwuzlaterm_1ga5975a209491cf1cc7eecb856447b1246" kindref="member">bitwuzla_term_get_children</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="group__c__bitwuzlaterm_1gabc37593daef49722a67da682bc387a71" refkind="member"><highlight class="normal">uint64_t<sp/>*<ref refid="group__c__bitwuzlaterm_1gabc37593daef49722a67da682bc387a71" kindref="member">bitwuzla_term_get_indices</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="group__c__bitwuzlaterm_1ga4833ef04df4355257a7295522f5905da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga4833ef04df4355257a7295522f5905da" kindref="member">bitwuzla_term_is_indexed</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="group__c__bitwuzlaterm_1ga78d7733d49ec4134be75e26704303275" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlaterm_1ga78d7733d49ec4134be75e26704303275" kindref="member">bitwuzla_term_get_sort</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="group__c__bitwuzlaterm_1gaede3ec49cd0246cf82aba9d6f56cf1ab" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlaterm_1gaede3ec49cd0246cf82aba9d6f56cf1ab" kindref="member">bitwuzla_term_array_get_index_sort</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="group__c__bitwuzlaterm_1ga3b3d22be4845607e9fef67234bbe49b3" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlaterm_1ga3b3d22be4845607e9fef67234bbe49b3" kindref="member">bitwuzla_term_array_get_element_sort</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="group__c__bitwuzlaterm_1ga3989a0aec5d263aa2850237932de03e3" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>*<ref refid="group__c__bitwuzlaterm_1ga3989a0aec5d263aa2850237932de03e3" kindref="member">bitwuzla_term_fun_get_domain_sorts</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="group__c__bitwuzlaterm_1ga6e7d67964c94704bd225f011a70caf49" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__bitwuzlaterm_1ga6e7d67964c94704bd225f011a70caf49" kindref="member">bitwuzla_term_fun_get_codomain_sort</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="group__c__bitwuzlaterm_1gaca4f4cdbeb541b7383d05505869b8c52" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlaterm_1gaca4f4cdbeb541b7383d05505869b8c52" kindref="member">bitwuzla_term_bv_get_size</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="group__c__bitwuzlaterm_1ga3433f784e5828c28de594c2eae2bfb25" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlaterm_1ga3433f784e5828c28de594c2eae2bfb25" kindref="member">bitwuzla_term_fp_get_exp_size</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="group__c__bitwuzlaterm_1gadb45c01bf4a9299f2423e1eaaadb0033" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlaterm_1gadb45c01bf4a9299f2423e1eaaadb0033" kindref="member">bitwuzla_term_fp_get_sig_size</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group__c__bitwuzlaterm_1ga691c7593f89b78f0aff9a975d7605809" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__c__bitwuzlaterm_1ga691c7593f89b78f0aff9a975d7605809" kindref="member">bitwuzla_term_fun_get_arity</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="group__c__bitwuzlaterm_1gad4343e156e526e366a1c28c90c6f2270" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlaterm_1gad4343e156e526e366a1c28c90c6f2270" kindref="member">bitwuzla_term_get_symbol</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="group__c__bitwuzlaterm_1gacacafcb92b8d267c93691df53a036759" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gacacafcb92b8d267c93691df53a036759" kindref="member">bitwuzla_term_is_equal_sort</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term0,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term1);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="group__c__bitwuzlaterm_1ga9f1e378f65a01e952266fa3f4329edfb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga9f1e378f65a01e952266fa3f4329edfb" kindref="member">bitwuzla_term_is_array</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="group__c__bitwuzlaterm_1ga340e84297905fea70861c42781cd5937" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga340e84297905fea70861c42781cd5937" kindref="member">bitwuzla_term_is_const</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="group__c__bitwuzlaterm_1gacfbbebc377fc344eb21d06a2236c8575" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gacfbbebc377fc344eb21d06a2236c8575" kindref="member">bitwuzla_term_is_fun</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="group__c__bitwuzlaterm_1ga4ec5da3adbe1fb6b2141bbf45e2713b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga4ec5da3adbe1fb6b2141bbf45e2713b6" kindref="member">bitwuzla_term_is_var</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="group__c__bitwuzlaterm_1ga939a56d13f0c03f10c27347a71b04842" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga939a56d13f0c03f10c27347a71b04842" kindref="member">bitwuzla_term_is_value</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="group__c__bitwuzlaterm_1ga14de5f5c450cf229c031a55f71e697ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga14de5f5c450cf229c031a55f71e697ff" kindref="member">bitwuzla_term_is_bv_value</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="group__c__bitwuzlaterm_1ga4e18f841753e6dbcb362670eb9e42d44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga4e18f841753e6dbcb362670eb9e42d44" kindref="member">bitwuzla_term_is_fp_value</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="group__c__bitwuzlaterm_1ga88a7d6bf6ce86452dfac4d3c1608ceae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga88a7d6bf6ce86452dfac4d3c1608ceae" kindref="member">bitwuzla_term_is_rm_value</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="group__c__bitwuzlaterm_1gab951c96cf7c8de78d290b9641a85fbf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gab951c96cf7c8de78d290b9641a85fbf0" kindref="member">bitwuzla_term_is_bool</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="group__c__bitwuzlaterm_1gab0a016bbaf3df6b5cd7f86b75462702d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gab0a016bbaf3df6b5cd7f86b75462702d" kindref="member">bitwuzla_term_is_bv</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="group__c__bitwuzlaterm_1gaa4b342abd33b3ca5c41562282309af03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gaa4b342abd33b3ca5c41562282309af03" kindref="member">bitwuzla_term_is_fp</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="group__c__bitwuzlaterm_1gae75357462b4b26a8b94c97cd04512b2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gae75357462b4b26a8b94c97cd04512b2e" kindref="member">bitwuzla_term_is_rm</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="group__c__bitwuzlaterm_1gad157215b947eeaa42f2817cebe685185" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gad157215b947eeaa42f2817cebe685185" kindref="member">bitwuzla_term_is_uninterpreted</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="group__c__bitwuzlaterm_1ga42be1121f209572968bead0a74a60477" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga42be1121f209572968bead0a74a60477" kindref="member">bitwuzla_term_is_true</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="group__c__bitwuzlaterm_1gad2e371db2d700c9da236ff1463461459" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gad2e371db2d700c9da236ff1463461459" kindref="member">bitwuzla_term_is_false</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="810" refid="group__c__bitwuzlaterm_1gadc9fe31254a283614f004399fc8c6725" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gadc9fe31254a283614f004399fc8c6725" kindref="member">bitwuzla_term_is_bv_value_zero</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="group__c__bitwuzlaterm_1gace12c03afef849b9ca83a49a13c260e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gace12c03afef849b9ca83a49a13c260e5" kindref="member">bitwuzla_term_is_bv_value_one</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="group__c__bitwuzlaterm_1gacb238425795b3b8ce7bf856886f622b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gacb238425795b3b8ce7bf856886f622b1" kindref="member">bitwuzla_term_is_bv_value_ones</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="group__c__bitwuzlaterm_1gad6e95a9f6dc656d59e21e4aeb7d39db1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gad6e95a9f6dc656d59e21e4aeb7d39db1" kindref="member">bitwuzla_term_is_bv_value_min_signed</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="group__c__bitwuzlaterm_1ga1a20f9c395fa0e62f1ae73f8cf97a06e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga1a20f9c395fa0e62f1ae73f8cf97a06e" kindref="member">bitwuzla_term_is_bv_value_max_signed</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="group__c__bitwuzlaterm_1ga3ecc6ad220c9cbfbde228e43cae03c05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga3ecc6ad220c9cbfbde228e43cae03c05" kindref="member">bitwuzla_term_is_fp_value_pos_zero</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="group__c__bitwuzlaterm_1ga3c6b7642e844ee2483a99bb50a1fcf5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga3c6b7642e844ee2483a99bb50a1fcf5c" kindref="member">bitwuzla_term_is_fp_value_neg_zero</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="group__c__bitwuzlaterm_1ga8297d9cc289fb7d79be43c02fa7abe60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga8297d9cc289fb7d79be43c02fa7abe60" kindref="member">bitwuzla_term_is_fp_value_pos_inf</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="group__c__bitwuzlaterm_1ga81780cfa1b0fbd2c2b2cc155aed98393" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga81780cfa1b0fbd2c2b2cc155aed98393" kindref="member">bitwuzla_term_is_fp_value_neg_inf</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="group__c__bitwuzlaterm_1gac39fe5279fac847b2efb0993cd733c85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gac39fe5279fac847b2efb0993cd733c85" kindref="member">bitwuzla_term_is_fp_value_nan</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="group__c__bitwuzlaterm_1ga1e69b5a3ad0202c4b47556b176e90bab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga1e69b5a3ad0202c4b47556b176e90bab" kindref="member">bitwuzla_term_is_rm_value_rna</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="911" refid="group__c__bitwuzlaterm_1ga3a1e94d761563347307003f24388d8ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga3a1e94d761563347307003f24388d8ce" kindref="member">bitwuzla_term_is_rm_value_rne</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="920" refid="group__c__bitwuzlaterm_1ga92d3e231c9c457797d2607639137960e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga92d3e231c9c457797d2607639137960e" kindref="member">bitwuzla_term_is_rm_value_rtn</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="group__c__bitwuzlaterm_1ga90be42f9b3195a9ce88246dd1f365f26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga90be42f9b3195a9ce88246dd1f365f26" kindref="member">bitwuzla_term_is_rm_value_rtp</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="group__c__bitwuzlaterm_1gaadd12467f48db5ab96d1b18f2df3457f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gaadd12467f48db5ab96d1b18f2df3457f" kindref="member">bitwuzla_term_is_rm_value_rtz</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="946" refid="group__c__bitwuzlaterm_1ga62ff89de320dfd2646f63e6babd1c45b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1ga62ff89de320dfd2646f63e6babd1c45b" kindref="member">bitwuzla_term_value_get_bool</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="972" refid="group__c__bitwuzlaterm_1ga6ae143e7115ee05a05243ced5c617c80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlaterm_1ga6ae143e7115ee05a05243ced5c617c80" kindref="member">bitwuzla_term_value_get_str</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,<sp/>uint8_t<sp/>base);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="group__c__bitwuzlaterm_1gaca69b705a8660a78f154756d7ec9fc08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gaca69b705a8660a78f154756d7ec9fc08" kindref="member">bitwuzla_term_value_get_fp_ieee</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**sign,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**exponent,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**significand,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>base);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="group__c__bitwuzlaterm_1ga4ad8a8bd87b9922b6561ac02f1184fc0" refkind="member"><highlight class="normal"><ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref><sp/><ref refid="group__c__bitwuzlaterm_1ga4ad8a8bd87b9922b6561ac02f1184fc0" kindref="member">bitwuzla_term_value_get_rm</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="group__c__bitwuzlaterm_1gaff9c507bbaeef8fb88ef39b84bab489e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzlaterm_1gaff9c507bbaeef8fb88ef39b84bab489e" kindref="member">bitwuzla_term_to_string</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="group__c__bitwuzlaterm_1gab88474ca5324cb6f1409f97ad0ff70c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzlaterm_1gab88474ca5324cb6f1409f97ad0ff70c8" kindref="member">bitwuzla_term_print</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,<sp/>FILE<sp/>*file);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bitwuzla<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*<ref refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" kindref="member">bitwuzla_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref><sp/>*options);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" kindref="member">bitwuzla_delete</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" kindref="member">bitwuzla_set_termination_callback</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>(*fun)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*state);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" kindref="member">bitwuzla_get_termination_callback_state</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="group__c__bitwuzla_1ga88b7e62e7f4e55cfea8246f0ef1475cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga88b7e62e7f4e55cfea8246f0ef1475cc" kindref="member">bitwuzla_set_abort_callback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*fun)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115" refid="group__c__bitwuzla_1ga71883bf281f1f07907bb20864d4dc2e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga71883bf281f1f07907bb20864d4dc2e6" kindref="member">bitwuzla_push</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/>uint64_t<sp/>nlevels);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="group__c__bitwuzla_1gaad3d52b312fd1d32799c8c331e37f44b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1gaad3d52b312fd1d32799c8c331e37f44b" kindref="member">bitwuzla_pop</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/>uint64_t<sp/>nlevels);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134" refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142" refid="group__c__bitwuzla_1ga42acd0a49fd3d85ed882a34a8733b01b" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>*<ref refid="group__c__bitwuzla_1ga42acd0a49fd3d85ed882a34a8733b01b" kindref="member">bitwuzla_get_assertions</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163" refid="group__c__bitwuzla_1ga301c640bc176890a0a87659eddc46711" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga301c640bc176890a0a87659eddc46711" kindref="member">bitwuzla_is_unsat_assumption</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185" refid="group__c__bitwuzla_1ga4f8606eeb86c44f82d57a8353eb4a889" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>*<ref refid="group__c__bitwuzla_1ga4f8606eeb86c44f82d57a8353eb4a889" kindref="member">bitwuzla_get_unsat_assumptions</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="group__c__bitwuzla_1ga3be61c745504ece6f8061d325779e075" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>*<ref refid="group__c__bitwuzla_1ga3be61c745504ece6f8061d325779e075" kindref="member">bitwuzla_get_unsat_core</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="group__c__bitwuzla_1ga245419e6c03f5859e4beb3a583a05bdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga245419e6c03f5859e4beb3a583a05bdf" kindref="member">bitwuzla_simplify</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244" refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" refkind="member"><highlight class="normal"><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref><sp/><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" refkind="member"><highlight class="normal"><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref><sp/><ref refid="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" kindref="member">bitwuzla_check_sat_assuming</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>argc,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>args[]);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288" refid="group__c__bitwuzla_1gae609c31695d3b4f95cab6ff9725d5415" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__bitwuzla_1gae609c31695d3b4f95cab6ff9725d5415" kindref="member">bitwuzla_get_value</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298" refid="group__c__bitwuzla_1ga4655af630e087a0bd001a90dc4094819" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga4655af630e087a0bd001a90dc4094819" kindref="member">bitwuzla_print_formula</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>FILE<sp/>*file);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314" refid="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" kindref="member">bitwuzla_get_statistics</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***keys,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***values,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Sort<sp/>creation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344" refid="group__c__sort__creation_1ga69dc2abdb304f46618b87e5ad0955361" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1ga69dc2abdb304f46618b87e5ad0955361" kindref="member">bitwuzla_mk_array_sort</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>index,<sp/><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>element);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="group__c__sort__creation_1gacdf18c2d5a68f684eb93c4e0a781625c" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1gacdf18c2d5a68f684eb93c4e0a781625c" kindref="member">bitwuzla_mk_bool_sort</ref>();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1ga6b834d1967cf36cc7922fd2b8720a09f" kindref="member">bitwuzla_mk_bv_sort</ref>(uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1ga722e4fff4a5326e8f0c5720bf08a7c99" kindref="member">bitwuzla_mk_fp_sort</ref>(uint64_t<sp/>exp_size,<sp/>uint64_t<sp/>sig_size);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402" refid="group__c__sort__creation_1gab67bdee3bbcfc271a36dff873ba199c8" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1gab67bdee3bbcfc271a36dff873ba199c8" kindref="member">bitwuzla_mk_fun_sort</ref>(uint64_t<sp/>arity,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>domain[],</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>codomain);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413" refid="group__c__sort__creation_1ga6c0ad22f24247d6998225cd1105a93f5" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1ga6c0ad22f24247d6998225cd1105a93f5" kindref="member">bitwuzla_mk_rm_sort</ref>();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423" refid="group__c__sort__creation_1ga43c064c2ea8b99a1e6543bc1d814d857" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/><ref refid="group__c__sort__creation_1ga43c064c2ea8b99a1e6543bc1d814d857" kindref="member">bitwuzla_mk_uninterpreted_sort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*symbol);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Term<sp/>creation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439" refid="group__c__term__creation_1ga66e28b1b57b92d8d85d489c9ede4bbce" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga66e28b1b57b92d8d85d489c9ede4bbce" kindref="member">bitwuzla_mk_true</ref>();</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445" refid="group__c__term__creation_1ga84036bd7ceabb96fd1dd6d04d08563c6" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga84036bd7ceabb96fd1dd6d04d08563c6" kindref="member">bitwuzla_mk_false</ref>();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456" refid="group__c__term__creation_1ga5a59a075d6242f52bce659a3b6b1a4b1" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga5a59a075d6242f52bce659a3b6b1a4b1" kindref="member">bitwuzla_mk_bv_zero</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467" refid="group__c__term__creation_1ga41e3edf7686bebdf663baa4a41ae876f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga41e3edf7686bebdf663baa4a41ae876f" kindref="member">bitwuzla_mk_bv_one</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478" refid="group__c__term__creation_1ga75fe6de097b4e057d584ee1da6fa8ddb" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga75fe6de097b4e057d584ee1da6fa8ddb" kindref="member">bitwuzla_mk_bv_ones</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="group__c__term__creation_1ga40015b4da40e207529d25cbee71d9a6d" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga40015b4da40e207529d25cbee71d9a6d" kindref="member">bitwuzla_mk_bv_min_signed</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1499" refid="group__c__term__creation_1gac59dbc5f424a1b1f3d4574018669c9d9" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gac59dbc5f424a1b1f3d4574018669c9d9" kindref="member">bitwuzla_mk_bv_max_signed</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="group__c__term__creation_1gaef14d5ef49ea543022687f41ef1f50a0" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaef14d5ef49ea543022687f41ef1f50a0" kindref="member">bitwuzla_mk_fp_pos_zero</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521" refid="group__c__term__creation_1ga07c88d8aea8e10b6d141c2ca5b9241eb" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga07c88d8aea8e10b6d141c2ca5b9241eb" kindref="member">bitwuzla_mk_fp_neg_zero</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532" refid="group__c__term__creation_1gaef1f309dc733bc4bc4efca1f166b479e" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaef1f309dc733bc4bc4efca1f166b479e" kindref="member">bitwuzla_mk_fp_pos_inf</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543" refid="group__c__term__creation_1gac202139fb0cdb5aeb74d2251145d1cb0" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gac202139fb0cdb5aeb74d2251145d1cb0" kindref="member">bitwuzla_mk_fp_neg_inf</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554" refid="group__c__term__creation_1ga7f70be4b69bd56c7ce541ec7954b8693" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga7f70be4b69bd56c7ce541ec7954b8693" kindref="member">bitwuzla_mk_fp_nan</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574" refid="group__c__term__creation_1ga125d09b9ee548724b2cbdf908516883b" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga125d09b9ee548724b2cbdf908516883b" kindref="member">bitwuzla_mk_bv_value</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>base);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592" refid="group__c__term__creation_1ga6ff3a9d94143fb86984e7fa31cb53f05" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga6ff3a9d94143fb86984e7fa31cb53f05" kindref="member">bitwuzla_mk_bv_value_uint64</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/>uint64_t<sp/>value);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608" refid="group__c__term__creation_1ga5afafc44f16c593fc8ed62a1ed4abcce" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga5afafc44f16c593fc8ed62a1ed4abcce" kindref="member">bitwuzla_mk_bv_value_int64</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/>int64_t<sp/>value);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622" refid="group__c__term__creation_1gae95213b8816199235169eedefad3fc6a" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gae95213b8816199235169eedefad3fc6a" kindref="member">bitwuzla_mk_fp_value</ref>(<ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>bv_sign,</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>bv_exponent,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>bv_significand);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644" refid="group__c__term__creation_1ga76ae4ddccb472f36344fb5ce95b9c5e5" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga76ae4ddccb472f36344fb5ce95b9c5e5" kindref="member">bitwuzla_mk_fp_from_real</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>rm,</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*real);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668" refid="group__c__term__creation_1gaee5e7892631d4f0e6f0fc3b593213572" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaee5e7892631d4f0e6f0fc3b593213572" kindref="member">bitwuzla_mk_fp_from_rational</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>rm,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*num,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*den);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684" refid="group__c__term__creation_1ga456d31991ff15a1df637c672c2a7e996" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga456d31991ff15a1df637c672c2a7e996" kindref="member">bitwuzla_mk_rm_value</ref>(<ref refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" kindref="member">BitwuzlaRoundingMode</ref><sp/>rm);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697" refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711" refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg0,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg1);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728" refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg0,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg1,</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg2);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745" refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>argc,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>args[]);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761" refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg,</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778" refid="group__c__term__creation_1gab7607ce0925baede9fe4809aa3ec7298" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gab7607ce0925baede9fe4809aa3ec7298" kindref="member">bitwuzla_mk_term1_indexed2</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx0,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx1);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796" refid="group__c__term__creation_1ga5b02a9794f16846a96ca0961be42615c" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga5b02a9794f16846a96ca0961be42615c" kindref="member">bitwuzla_mk_term2_indexed1</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg0,</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg1,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815" refid="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" kindref="member">bitwuzla_mk_term2_indexed2</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg0,</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>arg1,</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx0,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idx1);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836" refid="group__c__term__creation_1ga5a32d41a72e80f9ab9fd8b922a2bc22f" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga5a32d41a72e80f9ab9fd8b922a2bc22f" kindref="member">bitwuzla_mk_term_indexed</ref>(<ref refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" kindref="member">BitwuzlaKind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>argc,</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>args[],</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>idxc,</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>idxs[]);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858" refid="group__c__term__creation_1ga885a1f71a433bf5ad8b3860d45d766a4" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga885a1f71a433bf5ad8b3860d45d766a4" kindref="member">bitwuzla_mk_const</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*symbol);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873" refid="group__c__term__creation_1gad92c00bf5c5c651384b5550ec4161357" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1gad92c00bf5c5c651384b5550ec4161357" kindref="member">bitwuzla_mk_const_array</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>value);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892" refid="group__c__term__creation_1ga4e0b935b7719c68a38200d946ea29390" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__creation_1ga4e0b935b7719c68a38200d946ea29390" kindref="member">bitwuzla_mk_var</ref>(<ref refid="bitwuzla_8h_1a06673ea4feafd6e4c256a93804b827e2" kindref="member">BitwuzlaSort</ref><sp/>sort,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*symbol);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Term<sp/>substitution<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915" refid="group__c__term__substitution_1gaaec7b262c26d704a75dd2f6454c92756" refkind="member"><highlight class="normal"><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/><ref refid="group__c__term__substitution_1gaaec7b262c26d704a75dd2f6454c92756" kindref="member">bitwuzla_substitute_term</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>term,</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>map_size,</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>map_keys[],</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>map_values[]);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935" refid="group__c__term__substitution_1ga4d9ff44a9c8a967c6945445f5062443e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__c__term__substitution_1ga4d9ff44a9c8a967c6945445f5062443e" kindref="member">bitwuzla_substitute_terms</ref>(<ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref><sp/>*bitwuzla,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>terms_size,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>terms[],</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>map_size,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>map_keys[],</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref><sp/>map_values[]);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h"/>
  </compounddef>
</doxygen>
