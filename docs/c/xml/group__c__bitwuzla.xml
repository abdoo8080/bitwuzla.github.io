<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__c__bitwuzla" kind="group">
    <compoundname>c_bitwuzla</compoundname>
    <title>C_bitwuzla</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
        <definition>Bitwuzla * bitwuzla_new</definition>
        <argsstring>(const BitwuzlaOptions *options)</argsstring>
        <name>bitwuzla_new</name>
        <param>
          <type>const <ref refid="bitwuzla_8h_1aee766cc456eef191a186478f37558eb5" kindref="member">BitwuzlaOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Bitwuzla instance.</para>
<para>The returned instance must be deleted via <computeroutput><ref refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" kindref="member">bitwuzla_delete()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated options (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the created Bitwuzla instance.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" kindref="member">bitwuzla_delete</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1044" column="10" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1044" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gab6ade680629434fe7dc817d61e03f98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_delete</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_delete</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a Bitwuzla instance.</para>
<para>The given instance must have been created via <computeroutput><ref refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" kindref="member">bitwuzla_new()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gab0208cac6b875988472798fcc891c691" kindref="member">bitwuzla_new</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1056" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1056" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_termination_callback</definition>
        <argsstring>(Bitwuzla *bitwuzla, int32_t(*fun)(void *), void *state)</argsstring>
        <name>bitwuzla_set_termination_callback</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>int32_t(*)(void *)</type>
          <declname>fun</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure a termination callback function.</para>
<para>The <computeroutput>state</computeroutput> of the callback can be retrieved via <computeroutput><ref refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" kindref="member">bitwuzla_get_termination_callback_state()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function, returns a value != 0 if <computeroutput>bitwuzla</computeroutput> should be terminated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput>bitwuzla_terminate</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" kindref="member">bitwuzla_get_termination_callback_state</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1073" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1073" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga02a938405a46c7a6b4dd6ab22dc7659f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bitwuzla_get_termination_callback_state</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_get_termination_callback_state</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of the termination callback function.</para>
<para>The returned object representing the state of the callback corresponds to the <computeroutput>state</computeroutput> configured as argument to the callback function via <computeroutput><ref refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" kindref="member">bitwuzla_set_termination_callback()</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The object passed as argument <computeroutput>state</computeroutput> to the callback function.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput>bitwuzla_terminate</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1gae849b4da4cf424b7f23f53f5455fe8ce" kindref="member">bitwuzla_set_termination_callback</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1092" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1092" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga88b7e62e7f4e55cfea8246f0ef1475cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_set_abort_callback</definition>
        <argsstring>(void(*fun)(const char *msg))</argsstring>
        <name>bitwuzla_set_abort_callback</name>
        <param>
          <type>void(*)(const char *msg)</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure an abort callback function, which is called instead of exit on abort conditions.</para>
<para><simplesect kind="note"><para>If the abort callback function throws a C++ exception, this must be thrown via std::rethrow_if_nested.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function. Argument <computeroutput>msg</computeroutput> explains the reason for the abort. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1104" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga71883bf281f1f07907bb20864d4dc2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_push</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint64_t nlevels)</argsstring>
        <name>bitwuzla_push</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nlevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push context levels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nlevels</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of context levels to push.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1115" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gaad3d52b312fd1d32799c8c331e37f44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_pop</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint64_t nlevels)</argsstring>
        <name>bitwuzla_pop</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nlevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pop context levels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nlevels</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of context levels to pop.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1126" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_assert</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_assert</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assert formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The formula to assert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1134" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga42acd0a49fd3d85ed882a34a8733b01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_assertions</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_assertions</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the set of currently asserted formulas. <simplesect kind="return"><para>The asserted formulas. </para>
</simplesect>
<simplesect kind="return"><para>An array with the set of asserted formulas of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_assertions</computeroutput> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1142" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1142" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga301c640bc176890a0a87659eddc46711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bitwuzla_is_unsat_assumption</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_is_unsat_assumption</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if an assumption is an unsat assumption.</para>
<para>Unsat assumptions are assumptions that force an input formula to become unsatisfiable. Unsat assumptions handling in Bitwuzla is analogous to failed assumptions in MiniSAT.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The assumption to check for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if given assumption is an unsat assumption.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1163" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga4f8606eeb86c44f82d57a8353eb4a889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_unsat_assumptions</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_unsat_assumptions</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the set of unsat assumptions.</para>
<para>Unsat assumptions are assumptions that force an input formula to become unsatisfiable. Unsat assumptions handling in Bitwuzla is analogous to failed assumptions in MiniSAT.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the size of the returned array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with unsat assumptions of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_unsat_assumptions</computeroutput> call.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1185" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1185" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga3be61c745504ece6f8061d325779e075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref> *</type>
        <definition>BitwuzlaTerm * bitwuzla_get_unsat_core</definition>
        <argsstring>(Bitwuzla *bitwuzla, size_t *size)</argsstring>
        <name>bitwuzla_get_unsat_core</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the unsat core (unsat assertions).</para>
<para>The unsat core consists of the set of assertions that force an input formula to become unsatisfiable.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter, stores the size of the returned array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with unsat assertions of size <computeroutput>size</computeroutput>. Only valid until the next <computeroutput>bitwuzla_get_unsat_core</computeroutput> call.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1206" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1206" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga245419e6c03f5859e4beb3a583a05bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_simplify</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_simplify</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simplify the current input formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Each call to <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> and <computeroutput><ref refid="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" kindref="member">bitwuzla_check_sat_assuming()</ref></computeroutput> simplifies the input formula as a preprocessing step. It is not necessary to call this function explicitly in the general case.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1220" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1220" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></type>
        <definition>BitwuzlaResult bitwuzla_check_sat</definition>
        <argsstring>(Bitwuzla *bitwuzla)</argsstring>
        <name>bitwuzla_check_sat</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check satisfiability of current input formula.</para>
<para>An input formula consists of assertions added via <computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert()</ref></computeroutput>. The search for a solution can by guided by additionally making assumptions (see <computeroutput>bitwuzla_check_sat_assuming</computeroutput>).</para>
<para><simplesect kind="note"><para>Assertions and assumptions are combined via Boolean and.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput> if the input formula is satisfiable and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput> if it is unsatisfiable, and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" kindref="member">BITWUZLA_UNKNOWN</ref></computeroutput> when neither satisfiability nor unsatisfiability was determined. This can happen when <computeroutput>bitwuzla</computeroutput> was terminated via a termination callback.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1244" column="16" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1244" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga753f826b5468f6ccbeb3f2a3aebd371e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></type>
        <definition>BitwuzlaResult bitwuzla_check_sat_assuming</definition>
        <argsstring>(Bitwuzla *bitwuzla, uint32_t argc, BitwuzlaTerm args[])</argsstring>
        <name>bitwuzla_check_sat_assuming</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check satisfiability of current input formula wrt to the given set of assumptions.</para>
<para>An input formula consists of assertions added via <computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert()</ref></computeroutput>. The search for a solution can by guided by additionally making assumptions (the given set of assumptions <computeroutput>args</computeroutput>).</para>
<para><simplesect kind="note"><para>Assertions and assumptions are combined via Boolean and.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of assumptions in <computeroutput>args</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The assumptions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput> if the input formula is satisfiable and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" kindref="member">BITWUZLA_UNSAT</ref></computeroutput> if it is unsatisfiable, and <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" kindref="member">BITWUZLA_UNKNOWN</ref></computeroutput> when neither satisfiability nor unsatisfiability was determined. This can happen when <computeroutput>bitwuzla</computeroutput> was terminated via a termination callback.</para>
</simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__bitwuzla_1ga5b277550f06a67481dbc6134165ca297" kindref="member">bitwuzla_assert</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__bitwuzlaoptions_1ga662616299ca3fad47b443ad11222b9ef" kindref="member">bitwuzla_set_option</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" kindref="member">BitwuzlaResult</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1271" column="16" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1271" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1gae609c31695d3b4f95cab6ff9725d5415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
        <definition>BitwuzlaTerm bitwuzla_get_value</definition>
        <argsstring>(Bitwuzla *bitwuzla, BitwuzlaTerm term)</argsstring>
        <name>bitwuzla_get_value</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type><ref refid="bitwuzla_8h_1a42ac3566bfad7e7643b4682598d07f14" kindref="member">BitwuzlaTerm</ref></type>
          <declname>term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a term representing the model value of a given term.</para>
<para>Requires that the last <computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat()</ref></computeroutput> query returned <computeroutput><ref refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" kindref="member">BITWUZLA_SAT</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term to query a model value for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A term representing the model value of term <computeroutput>term</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__c__bitwuzla_1ga1044f2e98d6b229c1c77641b6afd95d2" kindref="member">bitwuzla_check_sat</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1288" column="14" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1288" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga4655af630e087a0bd001a90dc4094819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_print_formula</definition>
        <argsstring>(Bitwuzla *bitwuzla, const char *format, FILE *file)</argsstring>
        <name>bitwuzla_print_formula</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print the current input formula.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The output format for printing the formula. Currently, only <computeroutput>&quot;smt2&quot;</computeroutput> for the SMT-LIB v2 format is supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to print the formula to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1298" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1298" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bitwuzla_get_statistics</definition>
        <argsstring>(Bitwuzla *bitwuzla, const char ***keys, const char ***values, size_t *size)</argsstring>
        <name>bitwuzla_get_statistics</name>
        <param>
          <type><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref> *</type>
          <declname>bitwuzla</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>values</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current statistics.</para>
<para>The statistics are retrieved as a mapping from statistic name (<computeroutput>keys</computeroutput>) to statistic value (<computeroutput>values</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitwuzla</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bitwuzla instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting set of statistic names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting set of statistic values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting size of <computeroutput>keys</computeroutput> and <computeroutput>values</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Output parameters <computeroutput>keys</computeroutput> and <computeroutput>values</computeroutput> are only valid until the next call to <computeroutput><ref refid="group__c__bitwuzla_1ga9f3132743854aef12cd983272d483e54" kindref="member">bitwuzla_get_statistics()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" line="1314" column="6" declfile="/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h" declline="1314" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
