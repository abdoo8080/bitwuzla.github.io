<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="enums_8h" kind="file" language="C++">
    <compoundname>enums.h</compoundname>
    <includedby refid="bitwuzla_8h" local="no">/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/c/bitwuzla.h</label>
        <link refid="bitwuzla_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/c/parser.h</label>
        <link refid="parser_8h"/>
      </node>
      <node id="1">
        <label>/home/ma/git/bitwuzla/include/bitwuzla/enums.h</label>
        <link refid="enums_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="enums_8h_1afdaccbb8028676944c5b4dad92968641" prot="public" static="no">
        <name>ENUM</name>
        <param><defname>name</defname></param>
        <initializer><ref refid="bitwuzla_8h_1a567278f1aae009d69e2b0c7f940eb087" kindref="member">Bitwuzla</ref>##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="21" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" prot="public" static="no">
        <name>EVALUE</name>
        <param><defname>name</defname></param>
        <initializer>BITWUZLA_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="30" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" prot="public" static="no">
        <name>EVALUE</name>
        <param><defname>name</defname></param>
        <initializer>BITWUZLA_RM_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="53" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" prot="public" static="no">
        <name>EVALUE</name>
        <param><defname>name</defname></param>
        <initializer>BITWUZLA_KIND_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="133" column="10" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="enums_8h_1a1e8968636d0c1150ec835500f1953c02" prot="public" static="no">
        <name>BITWUZLA_API_ENUM_C_H_INCLUDED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="1773" column="9" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="1773" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" prot="public" static="no" strong="no">
        <type></type>
        <name>BitwuzlaResult</name>
        <enumvalue id="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" prot="public">
          <name>BITWUZLA_SAT</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>sat </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" prot="public">
          <name>BITWUZLA_UNSAT</name>
          <initializer>= 20</initializer>
          <briefdescription>
<para>unsat </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" prot="public">
          <name>BITWUZLA_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>unknown </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A satisfiability result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="34" column="1" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" prot="public" static="no" strong="no">
        <type></type>
        <name>BitwuzlaRoundingMode</name>
        <enumvalue id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a4ff005bc6c6e7f16c373ff3d8c394faa" prot="public">
          <name>BITWUZLA_RM_RNE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Round to the nearest even number. If the two nearest floating-point numbers bracketing an unrepresentable infinitely precise result are equally near, the one with an even least significant digit will be delivered.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>RNE</computeroutput> <computeroutput>roundNearestTiesToEven</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a2ae5a35efca1f8119145bf856bc0cf30" prot="public">
          <name>BITWUZLA_RM_RNA</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Round to the nearest number away from zero. If the two nearest floating-point numbers bracketing an unrepresentable infinitely precise result are equally near, the one with larger magnitude will be selected.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>RNA</computeroutput> <computeroutput>roundNearestTiesToAway</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687ac3a88e1a706b1cfcf04f8c6933ab318c" prot="public">
          <name>BITWUZLA_RM_RTN</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Round towards negative infinity (-oo). The result shall be the format’s floating-point number (possibly -oo) closest to and no less than the infinitely precise result.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>RTN</computeroutput> <computeroutput>roundTowardNegative</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a80d4f992cf0cdc9174d0d50c6e1116b1" prot="public">
          <name>BITWUZLA_RM_RTP</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Round towards positive infinity (+oo). The result shall be the format’s floating-point number (possibly +oo) closest to and no less than the infinitely precise result.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>RTP</computeroutput> <computeroutput>roundTowardPositive</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a32f64de42dcea0e4cfe6a33e90da557b" prot="public">
          <name>BITWUZLA_RM_RTZ</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Round towards zero. The result shall be the format’s floating-point number closest to and no greater in magnitude than the infinitely precise result.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>RTZ</computeroutput> <computeroutput>roundTowardZero</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rounding mode for floating-point operations.</para>
<para>For some floating-point operations, infinitely precise results may not be representable in a given format. Hence, they are rounded modulo one of five rounding modes to a representable floating-point number.</para>
<para><verbatim>embed:rst:leading-asterisk
* The following rounding modes follow the SMT-LIB theory for floating-point
* arithmetic, which in turn is based on IEEE Standard 754 :cite:`IEEE754`.
* The rounding modes are specified in Sections 4.3.1 and 4.3.2 of the IEEE
* Standard 754.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="70" column="1" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="71" bodyend="119"/>
      </memberdef>
      <memberdef kind="enum" id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" prot="public" static="no" strong="no">
        <type></type>
        <name>BitwuzlaKind</name>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae3f1406772fb016b6e66c92e08025886" prot="public">
          <name>BITWUZLA_KIND_CONSTANT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>First order constant. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a4e3ab754bb6f9d92bb272a71f83f01ec" prot="public">
          <name>BITWUZLA_KIND_CONST_ARRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Constant array. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976acf93e736a8c7b445ae6bf315cbc9122b" prot="public">
          <name>BITWUZLA_KIND_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Value. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa9d07153c1367e0f08b3a96eafe83e1" prot="public">
          <name>BITWUZLA_KIND_VARIABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bound variable. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2f8b31fb232a53eaba787c0b9f36bea9" prot="public">
          <name>BITWUZLA_KIND_AND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean and.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>and</computeroutput> </para>
<para><bold>Number of arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="0">$Bool \times ... \times Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af2bd2b6b5b796208fa5096c791433b58" prot="public">
          <name>BITWUZLA_KIND_DISTINCT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disequality.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>distinct</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="1">$S \times ... \times S \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa9b45c587510b3ff3e26ff58e4e714ff" prot="public">
          <name>BITWUZLA_KIND_EQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Equality.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>=</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="1">$S \times ... \times S \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a83912a83b269eee5ba3ca8f15bfac29b" prot="public">
          <name>BITWUZLA_KIND_IFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean if and only if.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>=</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="0">$Bool \times ... \times Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a234a8f030077b6d6e96c354c4df5985c" prot="public">
          <name>BITWUZLA_KIND_IMPLIES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean implies.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>=&gt;</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="0">$Bool \times ... \times Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a5c575abb7a4e2a84fffb741aff8458c4" prot="public">
          <name>BITWUZLA_KIND_NOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean not.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>not</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="2">$Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a99c4e96609877fd3fc5a902bda5d4d06" prot="public">
          <name>BITWUZLA_KIND_OR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean or.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>or</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="0">$Bool \times ... \times Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af37963a5a8f2c3ad7aec03cf691b7e3f" prot="public">
          <name>BITWUZLA_KIND_XOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Boolean xor.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>xor</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="0">$Bool \times ... \times Bool \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a267a359ca60f5e467d908c60b60d31dc" prot="public">
          <name>BITWUZLA_KIND_ITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>If-then-else.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>ite</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="3">$Bool \times S  \times S \rightarrow S$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a586effeff323dc46e51b63dd440acf43" prot="public">
          <name>BITWUZLA_KIND_EXISTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Existential quantification.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>exists</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="4">$S_1 \times ...  \times S_n \times Bool \rightarrow
 Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aeeb04d673b25984c3aed068786df0f6a" prot="public">
          <name>BITWUZLA_KIND_FORALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Universal quantification.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>forall</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="4">$S_1 \times ...  \times S_n \times Bool \rightarrow
 Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad5dbcd659d650d1fd1102e3fd5242492" prot="public">
          <name>BITWUZLA_KIND_APPLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Function application.</para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="5">$(S_1 \times ... \times S_n \rightarrow S) \times S_1
 \times ...  \times S_n \rightarrow S$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a73f8f4a1abcbf37ef6429484aa34b866" prot="public">
          <name>BITWUZLA_KIND_LAMBDA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lambda.</para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="6">$S_1 \times ... \times S_n \times S \rightarrow (S_1
 \times ... \times S_n \rightarrow S)$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8028e1883d64bc49bfc8401081f4659d" prot="public">
          <name>BITWUZLA_KIND_ARRAY_SELECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Array select.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>select</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="7">$(S_i \rightarrow S_e) \times S_i \rightarrow S_e$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a6d351144a192cd4ab7c2cae6c9112737" prot="public">
          <name>BITWUZLA_KIND_ARRAY_STORE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Array store.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>store</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="8">$(S_i \rightarrow S_e) \times S_i \times S_e \rightarrow
 (S_i \rightarrow S_e)$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad2be0d7279f9d4e97d415583720f3d06" prot="public">
          <name>BITWUZLA_KIND_BV_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector addition.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvadd</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="9">$BV_n \times ... \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aab14ff1efc294974fbb862758ef478d1" prot="public">
          <name>BITWUZLA_KIND_BV_AND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector and.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvand</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="9">$BV_n \times ... \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a60aae15249bf6ca2ffa70cc40f3e5a42" prot="public">
          <name>BITWUZLA_KIND_BV_ASHR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector arithmetic right shift.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvashr</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abcef765069014a92b665badcb2515c97" prot="public">
          <name>BITWUZLA_KIND_BV_COMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector comparison.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvcomp</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="11">$BV_n \times ... \times BV_n \rightarrow BV_1$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a760e5d611575e8b36ad4bf8edcd33041" prot="public">
          <name>BITWUZLA_KIND_BV_CONCAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector concat.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>concat</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="12">$BV_n \times ... \times BV_m \rightarrow BV_{n + ... +
 m}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa00a19318ccce90417f36809255baca2" prot="public">
          <name>BITWUZLA_KIND_BV_DEC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector decrement.</para>
<para>Decrement by one.</para>
<para>Number of arguments: 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para>Create with:<itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a591709331a1945c7f14eb6f24e4136a5" prot="public">
          <name>BITWUZLA_KIND_BV_INC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector increment.</para>
<para>Increment by one.</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a07f0d5b2b69d13356f787d969184f803" prot="public">
          <name>BITWUZLA_KIND_BV_MUL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector multiplication.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvmul</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="9">$BV_n \times ... \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976adbc53d55902adc48a1ea42b2dc5c1117" prot="public">
          <name>BITWUZLA_KIND_BV_NAND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector nand.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvnand</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aac6172c55b4f444805f1df1bf2257ee2" prot="public">
          <name>BITWUZLA_KIND_BV_NEG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector negation (two&apos;s complement).</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvneg</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8abedf7576512a8090594509365d0eae" prot="public">
          <name>BITWUZLA_KIND_BV_NOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector nor.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvnor</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abbe996a2436c6f92948585d30f1199c6" prot="public">
          <name>BITWUZLA_KIND_BV_NOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector not (one&apos;s complement).</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvnot</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ac50ca800e55cc4c8e3197f98dd62aab8" prot="public">
          <name>BITWUZLA_KIND_BV_OR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector or.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvor</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="9">$BV_n \times ... \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aeca279a573e098c60c2155cc8e5c3ef4" prot="public">
          <name>BITWUZLA_KIND_BV_REDAND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector and reduction.</para>
<para>Bit-wise <emphasis>and</emphasis> reduction), all bits are <emphasis>and</emphasis>&apos;ed together into a single bit. This corresponds to bit-wise <emphasis>and</emphasis> reduction as known from Verilog.</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="14">$BV_n \rightarrow BV_1$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afe4cbd7559d69a21b63a4e0bdd6720ee" prot="public">
          <name>BITWUZLA_KIND_BV_REDOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector reduce or.</para>
<para>Bit-wise <emphasis>or</emphasis> reduction), all bits are <emphasis>or</emphasis>&apos;ed together into a single bit. This corresponds to bit-wise <emphasis>or</emphasis> reduction as known from Verilog.</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="14">$BV_n \rightarrow BV_1$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afec965d045526c9cbec021f35f50f972" prot="public">
          <name>BITWUZLA_KIND_BV_REDXOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector reduce xor.</para>
<para>Bit-wise <emphasis>xor</emphasis> reduction), all bits are <emphasis>xor</emphasis>&apos;ed together into a single bit. This corresponds to bit-wise <emphasis>xor</emphasis> reduction as known from Verilog.</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="14">$BV_n \rightarrow BV_1$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8d38519879c8d0600ee9a04d67c060d6" prot="public">
          <name>BITWUZLA_KIND_BV_ROL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector rotate left (not indexed).</para>
<para>This is a non-indexed variant of SMT-LIB <computeroutput>rotate_left</computeroutput>.</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a397a073af901279009c50d70b5837a21" prot="public">
          <name>BITWUZLA_KIND_BV_ROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector rotate right.</para>
<para>This is a non-indexed variant of SMT-LIB <computeroutput>rotate_right</computeroutput>.</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a242fcd66ed186de29a05e8c0b0333b1e" prot="public">
          <name>BITWUZLA_KIND_BV_SADD_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed addition overflow test.</para>
<para>Predicate indicating if signed addition produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsaddo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa8d6026abeef81976f9f02aff85b6621" prot="public">
          <name>BITWUZLA_KIND_BV_SDIV_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed division overflow test.</para>
<para>Predicate indicating if signed division produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsdivo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a088ab90a86ff70adc83929ac657c1854" prot="public">
          <name>BITWUZLA_KIND_BV_SDIV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed division.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsdiv</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a01b248288899611be827976e5f9fa874" prot="public">
          <name>BITWUZLA_KIND_BV_SGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed greater than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsle</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2aad69a9f398a789d2ae8267643ddd0a" prot="public">
          <name>BITWUZLA_KIND_BV_SGT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed greater than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvslt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1d4250a00c27945b2a3e80949ec4a49e" prot="public">
          <name>BITWUZLA_KIND_BV_SHL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector logical left shift.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvshl</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad6a953e005e2a62bfaaa3f81bc2eb527" prot="public">
          <name>BITWUZLA_KIND_BV_SHR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector logical right shift.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvshr</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae81c648263570e584d9b8f24521b6089" prot="public">
          <name>BITWUZLA_KIND_BV_SLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed less than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsle</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a53236cb056d337ca849814a014c33877" prot="public">
          <name>BITWUZLA_KIND_BV_SLT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed less than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvslt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abf6c7059aa26bf35f0f5841970cda20a" prot="public">
          <name>BITWUZLA_KIND_BV_SMOD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed modulo.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsmod</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad01de79cf331d78a8613ed8813680adb" prot="public">
          <name>BITWUZLA_KIND_BV_SMUL_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed multiplication overflow test.</para>
<para>Predicate indicating if signed multiplication produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsmulo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae7ff2d39fb6461fd5bf0e21ef14feb2e" prot="public">
          <name>BITWUZLA_KIND_BV_SREM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed remainder.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsrem</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a98421bf1207c5cc1d579613abf51052c" prot="public">
          <name>BITWUZLA_KIND_BV_SSUB_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector signed subtraction overflow test.</para>
<para>Predicate indicatin if signed subtraction produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvssubo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8602929dd0c535a61bfd9b84d916120f" prot="public">
          <name>BITWUZLA_KIND_BV_SUB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector subtraction.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvsub</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aee364ca83439affd7ffcd952d15d45f3" prot="public">
          <name>BITWUZLA_KIND_BV_UADD_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned addition overflow test.</para>
<para>Predicate indicating if unsigned addition produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvuaddo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af4b56d840354618c017c2bfe6a937a4c" prot="public">
          <name>BITWUZLA_KIND_BV_UDIV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned division.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvudiv</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad530cccb53508ba0d66963f3855fcbc6" prot="public">
          <name>BITWUZLA_KIND_BV_UGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned greater than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvuge</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976adb7b6519f426ad127b8755273b910926" prot="public">
          <name>BITWUZLA_KIND_BV_UGT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned greater than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvugt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a60098702a1ed7198e922d6a5fab40078" prot="public">
          <name>BITWUZLA_KIND_BV_ULE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned less than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvule</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa74755a43d11ce093f59bd00c4b3078b" prot="public">
          <name>BITWUZLA_KIND_BV_ULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned less than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvult</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aef013815f363f1d1231f13bcf41bf43e" prot="public">
          <name>BITWUZLA_KIND_BV_UMUL_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned multiplication overflow test.</para>
<para>Predicate indicating if unsigned multiplication produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvumulo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae8085a0b9726e3d0d035c63f1e5f7d38" prot="public">
          <name>BITWUZLA_KIND_BV_UREM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned remainder.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvurem</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a0c15c3a68a3b0c8cf0cadfed57e04464" prot="public">
          <name>BITWUZLA_KIND_BV_USUB_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector unsigned subtraction overflow test.</para>
<para>Predicate indicating if unsigned subtraction produces an overflow.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvusubo</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="15">$BV_n \times BV_n \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a225cd308cb678b654928a43990e5b62b" prot="public">
          <name>BITWUZLA_KIND_BV_XNOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector xnor.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvxnor</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="10">$BV_n \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a02cd2854bdd27276bb5e9832df86a39d" prot="public">
          <name>BITWUZLA_KIND_BV_XOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector xor.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>bvxor</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="9">$BV_n \times ... \times BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a38efd769224b9d4254de1a466495f16b" prot="public">
          <name>BITWUZLA_KIND_BV_EXTRACT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector extract.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>extract</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 2 ( <formula id="16">$u$</formula>, <formula id="17">$l$</formula> with <formula id="18">$u \geq l$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="19">$BV_n \rightarrow BV_{u - l + 1}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gab7607ce0925baede9fe4809aa3ec7298" kindref="member">bitwuzla_mk_term1_indexed2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1865af0b8fc3d91290b53d988c83b46b" prot="public">
          <name>BITWUZLA_KIND_BV_REPEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector repeat.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>repeat</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 1 ( <formula id="20">$i$</formula> s.t. <formula id="21">$i \cdot n$</formula> fits into <computeroutput>uint64_t</computeroutput>)</para>
<para><bold>Arguments:</bold> <formula id="22">$BV_n \rightarrow BV_{n * i}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa369427c43905830119a99df55008237" prot="public">
          <name>BITWUZLA_KIND_BV_ROLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector rotate left by integer.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>rotate_left</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad85bb4b6d7fa625070a653f3979308db" prot="public">
          <name>BITWUZLA_KIND_BV_RORI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector rotate right by integer.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>rotate_right</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="13">$BV_n \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a0f9f695dc0f3da0d8f49c6d910c7bd9d" prot="public">
          <name>BITWUZLA_KIND_BV_SIGN_EXTEND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector sign extend.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>sign_extend</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 1 ( <formula id="20">$i$</formula> s.t. <formula id="23">$i + n$</formula> fits into <computeroutput>uint64_t</computeroutput>)</para>
<para><bold>Arguments:</bold> <formula id="24">$BV_n \rightarrow BV_{n + i}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1036216205484fc91fe46f9bb1f22bd2" prot="public">
          <name>BITWUZLA_KIND_BV_ZERO_EXTEND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bit-vector zero extend.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>zero_extend</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 1 ( <formula id="20">$i$</formula> s.t. <formula id="23">$i + n$</formula> fits into <computeroutput>uint64_t</computeroutput>)</para>
<para><bold>Arguments:</bold> <formula id="24">$BV_n \rightarrow BV_{n + i}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaa4ef7b33ad8c613365ca275c3293d6fd" kindref="member">bitwuzla_mk_term1_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a537d83e2bb410f4e285771f54205a5ee" prot="public">
          <name>BITWUZLA_KIND_FP_ABS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point absolute value.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.abs</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="25">$\mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a7c56b2d107f3388a620e45a4a4f5619b" prot="public">
          <name>BITWUZLA_KIND_FP_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point addition.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.add</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="26">$RM \times \mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a461e801b4f2a76f57c8fc191cb38db0c" prot="public">
          <name>BITWUZLA_KIND_FP_DIV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point division.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.div</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="26">$RM \times \mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a464f0dc1d9147d030830f1f11dfa3a93" prot="public">
          <name>BITWUZLA_KIND_FP_EQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point equality.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.eq</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="27">$\mathit{FP}_{es} \times ... \times \mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af177e9da8ebb95b56c047c0e06619465" prot="public">
          <name>BITWUZLA_KIND_FP_FMA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point fused multiplcation and addition.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.fma</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 4</para>
<para><bold>Arguments:</bold> <formula id="28">$RM \times \mathit{FP}_{es} \times \mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af04de051ba27a684762e3d49aff12d0f" prot="public">
          <name>BITWUZLA_KIND_FP_FP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point IEEE 754 value.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="29">$BV_1 \times BV_e \times BV_{s-1} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa6ed24ccbfe633092709d5f11dbc9fa" prot="public">
          <name>BITWUZLA_KIND_FP_GEQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point greater than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.geq</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="27">$\mathit{FP}_{es} \times ... \times \mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a130e59b80aa27d9e61ae7459e19f2a28" prot="public">
          <name>BITWUZLA_KIND_FP_GT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point greater than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.gt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="27">$\mathit{FP}_{es} \times ... \times \mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a92cd951413a777b45d53383e9c6d6822" prot="public">
          <name>BITWUZLA_KIND_FP_IS_INF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is infinity tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isInfinite</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a09eb07070ded59fe96098e64b3208ff6" prot="public">
          <name>BITWUZLA_KIND_FP_IS_NAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is Nan tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isNaN</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae5883f6f99ccf4d05a6a924930d4d174" prot="public">
          <name>BITWUZLA_KIND_FP_IS_NEG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is negative tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isNegative</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a369c2b14f3c98b8cc6d2119e3b2fe84c" prot="public">
          <name>BITWUZLA_KIND_FP_IS_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is normal tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isNormal</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa87f87ad02f91bd78d75283ae0183fc6" prot="public">
          <name>BITWUZLA_KIND_FP_IS_POS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is positive tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isPositive</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa0dc7ebb4d5d9aebf99273c83b05ca6" prot="public">
          <name>BITWUZLA_KIND_FP_IS_SUBNORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is subnormal tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isSubnormal</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a3128bd16528d52f8b3610d07033e6237" prot="public">
          <name>BITWUZLA_KIND_FP_IS_ZERO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point is zero tester.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.isZero</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a87fe207aa07e9d617d60012eda1ea34d" prot="public">
          <name>BITWUZLA_KIND_FP_LEQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point less than or equal.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.leq</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="27">$\mathit{FP}_{es} \times ... \times \mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a15453a3762bc268cdce1919331998ff5" prot="public">
          <name>BITWUZLA_KIND_FP_LT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point less than.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.lt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> <computeroutput>&gt;=</computeroutput> 2</para>
<para><bold>Arguments:</bold> <formula id="30">$\mathit{FP}_{es} \rightarrow Bool$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976acd955fc447bf93236cf44e547e7d15e9" prot="public">
          <name>BITWUZLA_KIND_FP_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point max.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.max</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="31">$\mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a727ae2bfbf948df14b2f076f4a97d615" prot="public">
          <name>BITWUZLA_KIND_FP_MIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point min.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.min</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="31">$\mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a77bd8f7a8f44425b6396950881643d60" prot="public">
          <name>BITWUZLA_KIND_FP_MUL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point multiplcation.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.mul</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="26">$RM \times \mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae2660f0ecd3954635656f59d588d99d9" prot="public">
          <name>BITWUZLA_KIND_FP_NEG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point negation.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.neg</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Arguments:</bold> <formula id="25">$\mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga8a310d7dff8b393722d297da57b3de02" kindref="member">bitwuzla_mk_term1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a6fe0a39b3d68afe341d0ac044c5e2a63" prot="public">
          <name>BITWUZLA_KIND_FP_REM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point remainder.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.rem</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="31">$\mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a28348c409c85064535d1273c2c3b6b95" prot="public">
          <name>BITWUZLA_KIND_FP_RTI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point round to integral.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.roundToIntegral</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="32">$RM \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ab68b4ea8274e24fd6f4e5265c4bd2fd2" prot="public">
          <name>BITWUZLA_KIND_FP_SQRT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point square root.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.sqrt</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Arguments:</bold> <formula id="32">$RM \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga694d5705287a8a8dfc85cf9ad9527cdd" kindref="member">bitwuzla_mk_term2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976accf8b212b289593bd8a95310e16009df" prot="public">
          <name>BITWUZLA_KIND_FP_SUB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point subtraction.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.sub</computeroutput> </para>
<para><bold>Number of Arguments:</bold> 3</para>
<para><bold>Arguments:</bold> <formula id="26">$RM \times \mathit{FP}_{es} \times \mathit{FP}_{es} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gaaa12811ec39e7142c91c5cce0ba90dc3" kindref="member">bitwuzla_mk_term3()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a098166a646b7162defd575dcb9cf8321" prot="public">
          <name>BITWUZLA_KIND_FP_TO_FP_FROM_BV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_fp from IEEE 754 bit-vector.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>to_fp</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 1</para>
<para><bold>Number of Indices:</bold> 2 ( <formula id="33">$e$</formula>, <formula id="34">$s$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="35">$BV_n \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1gab7607ce0925baede9fe4809aa3ec7298" kindref="member">bitwuzla_mk_term1_indexed2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1aad6725035e0bec3272d4304ee87bc7" prot="public">
          <name>BITWUZLA_KIND_FP_TO_FP_FROM_FP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_fp from floating-point.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>to_fp</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Number of Indices:</bold> 2 ( <formula id="33">$e$</formula>, <formula id="34">$s$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="36">$RM \times \mathit{FP}_{e&apos;s&apos;} \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" kindref="member">bitwuzla_mk_term2_indexed2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2b60598ce57fc21466f6a5deb8625e8b" prot="public">
          <name>BITWUZLA_KIND_FP_TO_FP_FROM_SBV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_fp from signed bit-vector value.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>to_fp</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Number of Indices:</bold> 2 ( <formula id="33">$e$</formula>, <formula id="34">$s$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="37">$RM \times BV_n \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" kindref="member">bitwuzla_mk_term2_indexed2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afb9e54c3afcd214e462c4dd01a2069db" prot="public">
          <name>BITWUZLA_KIND_FP_TO_FP_FROM_UBV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_fp from unsigned bit-vector value.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>to_fp_unsigned</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Number of Indices:</bold> 2 ( <formula id="33">$e$</formula>, <formula id="34">$s$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="37">$RM \times BV_n \rightarrow \mathit{FP}_{es}$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga452fd331163360bce3b2f6d6e52c615f" kindref="member">bitwuzla_mk_term2_indexed2()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a4af12527b44a241280c4c70f5827e0bf" prot="public">
          <name>BITWUZLA_KIND_FP_TO_SBV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_sbv.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.to_sbv</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Number of Indices:</bold> 1 ( <formula id="38">$n$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="39">$RM \times \mathit{FP}_{es} \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga5b02a9794f16846a96ca0961be42615c" kindref="member">bitwuzla_mk_term2_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a179bee132ebd572cf97ff7dbc3ef806d" prot="public">
          <name>BITWUZLA_KIND_FP_TO_UBV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating-point to_ubv.</para>
<para><bold>SMT-LIB:</bold> <computeroutput>fp.to_ubv</computeroutput> (indexed)</para>
<para><bold>Number of Arguments:</bold> 2</para>
<para><bold>Number of Indices:</bold> 1 ( <formula id="38">$n$</formula>)</para>
<para><bold>Arguments:</bold> <formula id="39">$RM \times \mathit{FP}_{es} \rightarrow BV_n$</formula></para>
<para><bold>Create with:</bold><itemizedlist>
<listitem><para><bold>C</bold><itemizedlist>
<listitem><para><computeroutput><ref refid="group__c__term__creation_1ga5b02a9794f16846a96ca0961be42615c" kindref="member">bitwuzla_mk_term2_indexed1()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__c__term__creation_1gaf937695970f9ccc26694ffd10580da9a" kindref="member">bitwuzla_mk_term()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>C++</bold><itemizedlist>
<listitem><para><computeroutput>bitwuzla::mk_term()</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The term kind. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" line="137" column="1" bodyfile="/home/ma/git/bitwuzla/include/bitwuzla/enums.h" bodystart="138" bodyend="1748"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Bitwuzla:<sp/>Satisfiability<sp/>Modulo<sp/>Theories<sp/>(SMT)<sp/>solver.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2022<sp/>by<sp/>the<sp/>authors<sp/>listed<sp/>in<sp/>the<sp/>AUTHORS<sp/>file<sp/>at</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/AUTHORS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Bitwuzla<sp/>under<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>COPYING<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>information<sp/>at<sp/>https://github.com/bitwuzla/bitwuzla/blob/main/COPYING</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined(BITWUZLA_API_USE_C_ENUMS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!defined(BITWUZLA_API_ENUM_CPP_H_INCLUDED))<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>(defined(BITWUZLA_API_USE_C_ENUMS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!defined(BITWUZLA_API_ENUM_C_H_INCLUDED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bitwuzla<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENUM(name)<sp/>class<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVALUE(name)<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENUM(name)<sp/>Bitwuzla##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVALUE(name)<sp/>BITWUZLA_##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Result)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbead34a61d3488e1095ab798f3d1a5540ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(SAT)<sp/><sp/><sp/><sp/><sp/>=<sp/>10,<sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae3a04c185b6d00a30c1b08b8d8b17abf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(UNSAT)<sp/><sp/><sp/>=<sp/>20,<sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="enums_8h_1a68f12662f6bc3f5f2887144995090dbeae7db846c2213a0bb55ac7871b31803ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(UNKNOWN)<sp/>=<sp/>0,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Result)<sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Result);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RoundingMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVALUE(name)<sp/>BITWUZLA_RM_##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(RoundingMode)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a4ff005bc6c6e7f16c373ff3d8c394faa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(RNE)<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="89" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a2ae5a35efca1f8119145bf856bc0cf30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(RNA)<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="97" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687ac3a88e1a706b1cfcf04f8c6933ab318c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(RTN)<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="105" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a80d4f992cf0cdc9174d0d50c6e1116b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(RTP)<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="113" refid="enums_8h_1a5c1c80490dd4f2642905e2b28be59687a32f64de42dcea0e4cfe6a33e90da557b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(RTZ)<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(MAX)<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(RoundingMode)<sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(RoundingMode);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Term<sp/>Kind<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVALUE(name)<sp/>BITWUZLA_KIND_##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Kind)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae3f1406772fb016b6e66c92e08025886" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(CONSTANT)<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="142" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a4e3ab754bb6f9d92bb272a71f83f01ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(CONST_ARRAY),</highlight></codeline>
<codeline lineno="144" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976acf93e736a8c7b445ae6bf315cbc9122b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(VALUE),</highlight></codeline>
<codeline lineno="146" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa9d07153c1367e0f08b3a96eafe83e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(VARIABLE),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2f8b31fb232a53eaba787c0b9f36bea9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(AND),</highlight></codeline>
<codeline lineno="184" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af2bd2b6b5b796208fa5096c791433b58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(DISTINCT),</highlight></codeline>
<codeline lineno="201" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa9b45c587510b3ff3e26ff58e4e714ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(EQUAL),</highlight></codeline>
<codeline lineno="218" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a83912a83b269eee5ba3ca8f15bfac29b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(IFF),</highlight></codeline>
<codeline lineno="235" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a234a8f030077b6d6e96c354c4df5985c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(IMPLIES),</highlight></codeline>
<codeline lineno="251" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a5c575abb7a4e2a84fffb741aff8458c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(NOT),</highlight></codeline>
<codeline lineno="268" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a99c4e96609877fd3fc5a902bda5d4d06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(OR),</highlight></codeline>
<codeline lineno="285" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af37963a5a8f2c3ad7aec03cf691b7e3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(XOR),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a267a359ca60f5e467d908c60b60d31dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(ITE),</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a586effeff323dc46e51b63dd440acf43" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(EXISTS),</highlight></codeline>
<codeline lineno="339" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aeeb04d673b25984c3aed068786df0f6a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FORALL),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad5dbcd659d650d1fd1102e3fd5242492" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(APPLY),</highlight></codeline>
<codeline lineno="371" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a73f8f4a1abcbf37ef6429484aa34b866" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(LAMBDA),</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8028e1883d64bc49bfc8401081f4659d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(ARRAY_SELECT),</highlight></codeline>
<codeline lineno="406" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a6d351144a192cd4ab7c2cae6c9112737" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(ARRAY_STORE),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad2be0d7279f9d4e97d415583720f3d06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ADD),</highlight></codeline>
<codeline lineno="442" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aab14ff1efc294974fbb862758ef478d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_AND),</highlight></codeline>
<codeline lineno="458" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a60aae15249bf6ca2ffa70cc40f3e5a42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ASHR),</highlight></codeline>
<codeline lineno="475" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abcef765069014a92b665badcb2515c97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_COMP),</highlight></codeline>
<codeline lineno="493" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a760e5d611575e8b36ad4bf8edcd33041" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_CONCAT),</highlight></codeline>
<codeline lineno="509" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa00a19318ccce90417f36809255baca2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_DEC),</highlight></codeline>
<codeline lineno="525" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a591709331a1945c7f14eb6f24e4136a5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_INC),</highlight></codeline>
<codeline lineno="542" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a07f0d5b2b69d13356f787d969184f803" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_MUL),</highlight></codeline>
<codeline lineno="558" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976adbc53d55902adc48a1ea42b2dc5c1117" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_NAND),</highlight></codeline>
<codeline lineno="574" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aac6172c55b4f444805f1df1bf2257ee2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_NEG),</highlight></codeline>
<codeline lineno="590" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8abedf7576512a8090594509365d0eae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_NOR),</highlight></codeline>
<codeline lineno="606" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abbe996a2436c6f92948585d30f1199c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_NOT),</highlight></codeline>
<codeline lineno="623" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ac50ca800e55cc4c8e3197f98dd62aab8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_OR),</highlight></codeline>
<codeline lineno="640" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aeca279a573e098c60c2155cc8e5c3ef4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_REDAND),</highlight></codeline>
<codeline lineno="657" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afe4cbd7559d69a21b63a4e0bdd6720ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_REDOR),</highlight></codeline>
<codeline lineno="674" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afec965d045526c9cbec021f35f50f972" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_REDXOR),</highlight></codeline>
<codeline lineno="690" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8d38519879c8d0600ee9a04d67c060d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ROL),</highlight></codeline>
<codeline lineno="706" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a397a073af901279009c50d70b5837a21" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ROR),</highlight></codeline>
<codeline lineno="724" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a242fcd66ed186de29a05e8c0b0333b1e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SADD_OVERFLOW),</highlight></codeline>
<codeline lineno="742" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa8d6026abeef81976f9f02aff85b6621" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SDIV_OVERFLOW),</highlight></codeline>
<codeline lineno="758" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a088ab90a86ff70adc83929ac657c1854" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SDIV),</highlight></codeline>
<codeline lineno="774" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a01b248288899611be827976e5f9fa874" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SGE),</highlight></codeline>
<codeline lineno="790" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2aad69a9f398a789d2ae8267643ddd0a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SGT),</highlight></codeline>
<codeline lineno="806" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1d4250a00c27945b2a3e80949ec4a49e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SHL),</highlight></codeline>
<codeline lineno="822" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad6a953e005e2a62bfaaa3f81bc2eb527" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SHR),</highlight></codeline>
<codeline lineno="838" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae81c648263570e584d9b8f24521b6089" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SLE),</highlight></codeline>
<codeline lineno="854" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a53236cb056d337ca849814a014c33877" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SLT),</highlight></codeline>
<codeline lineno="870" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976abf6c7059aa26bf35f0f5841970cda20a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SMOD),</highlight></codeline>
<codeline lineno="888" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad01de79cf331d78a8613ed8813680adb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SMUL_OVERFLOW),</highlight></codeline>
<codeline lineno="904" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae7ff2d39fb6461fd5bf0e21ef14feb2e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SREM),</highlight></codeline>
<codeline lineno="922" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a98421bf1207c5cc1d579613abf51052c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SSUB_OVERFLOW),</highlight></codeline>
<codeline lineno="938" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a8602929dd0c535a61bfd9b84d916120f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SUB),</highlight></codeline>
<codeline lineno="956" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aee364ca83439affd7ffcd952d15d45f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UADD_OVERFLOW),</highlight></codeline>
<codeline lineno="972" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af4b56d840354618c017c2bfe6a937a4c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UDIV),</highlight></codeline>
<codeline lineno="988" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad530cccb53508ba0d66963f3855fcbc6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UGE),</highlight></codeline>
<codeline lineno="1004" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976adb7b6519f426ad127b8755273b910926" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UGT),</highlight></codeline>
<codeline lineno="1020" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a60098702a1ed7198e922d6a5fab40078" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ULE),</highlight></codeline>
<codeline lineno="1036" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa74755a43d11ce093f59bd00c4b3078b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ULT),</highlight></codeline>
<codeline lineno="1054" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aef013815f363f1d1231f13bcf41bf43e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UMUL_OVERFLOW),</highlight></codeline>
<codeline lineno="1070" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae8085a0b9726e3d0d035c63f1e5f7d38" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_UREM),</highlight></codeline>
<codeline lineno="1088" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a0c15c3a68a3b0c8cf0cadfed57e04464" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_USUB_OVERFLOW),</highlight></codeline>
<codeline lineno="1104" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a225cd308cb678b654928a43990e5b62b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_XNOR),</highlight></codeline>
<codeline lineno="1121" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a02cd2854bdd27276bb5e9832df86a39d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_XOR),</highlight></codeline>
<codeline lineno="1139" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a38efd769224b9d4254de1a466495f16b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_EXTRACT),</highlight></codeline>
<codeline lineno="1158" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1865af0b8fc3d91290b53d988c83b46b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_REPEAT),</highlight></codeline>
<codeline lineno="1176" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa369427c43905830119a99df55008237" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ROLI),</highlight></codeline>
<codeline lineno="1194" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ad85bb4b6d7fa625070a653f3979308db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_RORI),</highlight></codeline>
<codeline lineno="1212" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a0f9f695dc0f3da0d8f49c6d910c7bd9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_SIGN_EXTEND),</highlight></codeline>
<codeline lineno="1230" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1036216205484fc91fe46f9bb1f22bd2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(BV_ZERO_EXTEND),</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a537d83e2bb410f4e285771f54205a5ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_ABS),</highlight></codeline>
<codeline lineno="1264" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a7c56b2d107f3388a620e45a4a4f5619b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_ADD),</highlight></codeline>
<codeline lineno="1280" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a461e801b4f2a76f57c8fc191cb38db0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_DIV),</highlight></codeline>
<codeline lineno="1296" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a464f0dc1d9147d030830f1f11dfa3a93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_EQUAL),</highlight></codeline>
<codeline lineno="1311" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af177e9da8ebb95b56c047c0e06619465" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_FMA),</highlight></codeline>
<codeline lineno="1327" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976af04de051ba27a684762e3d49aff12d0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_FP),</highlight></codeline>
<codeline lineno="1343" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa6ed24ccbfe633092709d5f11dbc9fa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_GEQ),</highlight></codeline>
<codeline lineno="1359" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a130e59b80aa27d9e61ae7459e19f2a28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_GT),</highlight></codeline>
<codeline lineno="1375" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a92cd951413a777b45d53383e9c6d6822" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_INF),</highlight></codeline>
<codeline lineno="1391" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a09eb07070ded59fe96098e64b3208ff6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_NAN),</highlight></codeline>
<codeline lineno="1407" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae5883f6f99ccf4d05a6a924930d4d174" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_NEG),</highlight></codeline>
<codeline lineno="1423" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a369c2b14f3c98b8cc6d2119e3b2fe84c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_NORMAL),</highlight></codeline>
<codeline lineno="1439" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976aa87f87ad02f91bd78d75283ae0183fc6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_POS),</highlight></codeline>
<codeline lineno="1455" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afa0dc7ebb4d5d9aebf99273c83b05ca6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_SUBNORMAL),</highlight></codeline>
<codeline lineno="1471" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a3128bd16528d52f8b3610d07033e6237" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_IS_ZERO),</highlight></codeline>
<codeline lineno="1488" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a87fe207aa07e9d617d60012eda1ea34d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_LEQ),</highlight></codeline>
<codeline lineno="1505" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a15453a3762bc268cdce1919331998ff5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_LT),</highlight></codeline>
<codeline lineno="1521" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976acd955fc447bf93236cf44e547e7d15e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_MAX),</highlight></codeline>
<codeline lineno="1537" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a727ae2bfbf948df14b2f076f4a97d615" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_MIN),</highlight></codeline>
<codeline lineno="1553" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a77bd8f7a8f44425b6396950881643d60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_MUL),</highlight></codeline>
<codeline lineno="1569" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ae2660f0ecd3954635656f59d588d99d9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_NEG),</highlight></codeline>
<codeline lineno="1585" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a6fe0a39b3d68afe341d0ac044c5e2a63" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_REM),</highlight></codeline>
<codeline lineno="1601" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a28348c409c85064535d1273c2c3b6b95" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_RTI),</highlight></codeline>
<codeline lineno="1617" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976ab68b4ea8274e24fd6f4e5265c4bd2fd2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_SQRT),</highlight></codeline>
<codeline lineno="1633" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976accf8b212b289593bd8a95310e16009df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_SUB),</highlight></codeline>
<codeline lineno="1651" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a098166a646b7162defd575dcb9cf8321" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_FP_FROM_BV),</highlight></codeline>
<codeline lineno="1669" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a1aad6725035e0bec3272d4304ee87bc7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_FP_FROM_FP),</highlight></codeline>
<codeline lineno="1688" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a2b60598ce57fc21466f6a5deb8625e8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_FP_FROM_SBV),</highlight></codeline>
<codeline lineno="1706" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976afb9e54c3afcd214e462c4dd01a2069db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_FP_FROM_UBV),</highlight></codeline>
<codeline lineno="1724" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a4af12527b44a241280c4c70f5827e0bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_SBV),</highlight></codeline>
<codeline lineno="1742" refid="enums_8h_1aab03a20a5632ef7b0bd1b362d9ae4976a179bee132ebd572cf97ff7dbc3ef806d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(FP_TO_UBV),</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined(NDEBUG)<sp/>||<sp/>defined(BITWUZLA_API_USE_C_ENUMS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><ref refid="enums_8h_1a8f41c0c7caad09e429617fc016a216e8" kindref="member">EVALUE</ref>(NUM_KINDS),</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SKIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Kind)<sp/><ref refid="enums_8h_1afdaccbb8028676944c5b4dad92968641" kindref="member">ENUM</ref>(Kind);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bitwuzla</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_USE_C_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_ENUM_CPP_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITWUZLA_API_ENUM_CPP_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BITWUZLA_API_ENUM_C_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="enums_8h_1a1e8968636d0c1150ec835500f1953c02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITWUZLA_API_ENUM_C_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ma/git/bitwuzla/include/bitwuzla/enums.h"/>
  </compounddef>
</doxygen>
